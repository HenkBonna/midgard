import bpy
from mathutils import Color



    
# =====================================================
#                     TEST RIG
# =====================================================


class OBJECT_OT_create_test_rig_ra(bpy.types.Operator):
    '''Create Test Human Rig'''
    bl_idname = "object.create_test_rig_ra"
    bl_label = "Test Rig"
    bl_options = {'REGISTER', 'UNDO'}


 

    def execute(self, context):



        # Rename Existing Rigify UI Script
        for t in bpy.data.texts:
            if t.name == 'rig_ui.py':
                t.name = 'rig_ui_new_name.py'



        # Rename Existing Armature with name 'rig'
        for arm in bpy.data.objects:
            if arm.type == 'ARMATURE' and arm.name.startswith('rig'):
                arm.name = 'Rename this rig'    

        # Rename Existing Armature with name 'human_rig'
        for arm in bpy.data.objects:
            if arm.type == 'ARMATURE' and arm.name.startswith('human_rig'):
                arm.name = 'human rig next' 



        current_mode = bpy.context.mode
        if current_mode != 'OBJECT':
            bpy.ops.object.mode_set(mode='OBJECT')


         
        # Rename 'rig_main_mesh'
        for o in bpy.context.scene.objects:
            if o.type == 'MESH' and o.name == 'Human_GEO':
                o.name = 'Human'



        # Set active 'Scene Collection'
        scene_collection = bpy.context.view_layer.layer_collection
        bpy.context.view_layer.active_layer_collection = scene_collection




        # Human_Mesh



        verts = ((0.11004761606454849, 0.06989400833845139, 1.6035118103027344),
                 (0.1362890601158142, 0.02545354515314102, 1.6089978218078613),
                 (0.10912385582923889, 0.06811806559562683, 1.538026213645935),
                 (0.0, -0.09431825578212738, 1.5511977672576904),
                 (0.0, -0.06808066368103027, 1.6219465732574463),
                 (0.11176389455795288, -0.05292573571205139, 1.6127361059188843),
                 (0.11562968045473099, -0.0643090307712555, 1.5496004819869995),
                 (0.1396622657775879, 0.021890467032790184, 1.540109395980835),
                 (0.10937163978815079, -0.06683972477912903, 1.4737378358840942),
                 (0.12949436902999878, 0.014878930523991585, 1.4697015285491943),
                 (0.10304807126522064, 0.05907934159040451, 1.4711799621582031),
                 (0.0, 0.08183872699737549, 1.537148356437683),
                 (0.0, 0.08575013279914856, 1.6006239652633667),
                 (0.0, -0.10103501379489899, 1.472942590713501),
                 (0.0, 0.06921207904815674, 1.469931721687317),
                 (0.059001702815294266, -0.08967306464910507, 1.5522369146347046),
                 (0.05522285774350166, -0.094520203769207, 1.4740166664123535),
                 (0.05882514640688896, -0.06627960503101349, 1.616787075996399),
                 (0.061139099299907684, 0.08772378414869308, 1.6014370918273926),
                 (0.05155923590064049, 0.07423426955938339, 1.4708034992218018),
                 (0.05461548641324043, 0.08520347625017166, 1.537339448928833),
                 (0.1414220780134201, -0.02362922765314579, 1.5459120273590088),
                 (0.1298760622739792, -0.02362607792019844, 1.471063256263733),
                 (0.13743171095848083, -0.016769584268331528, 1.6114506721496582),
                 (0.11250066012144089, -0.06557437777519226, 1.5116691589355469),
                 (0.0, 0.07552540302276611, 1.5035400390625),
                 (0.10608596354722977, 0.06359870731830597, 1.5046031475067139),
                 (0.13457831740379333, 0.018384698778390884, 1.5049054622650146),
                 (0.0, -0.0985158309340477, 1.5118937492370605),
                 (0.056828588247299194, -0.09347683191299438, 1.5129716396331787),
                 (0.05308736115694046, 0.07971887290477753, 1.5040714740753174),
                 (0.13564907014369965, -0.02362765371799469, 1.5084877014160156),
                 (0.11212650686502457, 0.0690060406923294, 1.5707690715789795),
                 (0.0, 0.08379442989826202, 1.568886160850525),
                 (0.11638496071100235, -0.06087736785411835, 1.581168293952942),
                 (0.14277014136314392, 0.023672007024288177, 1.5745536088943481),
                 (0.0, -0.08245458453893661, 1.5843636989593506),
                 (0.0594797320663929, -0.08161947131156921, 1.5835858583450317),
                 (0.056217633187770844, 0.08646363019943237, 1.5693882703781128),
                 (0.14431950449943542, -0.020199406892061234, 1.5786813497543335),
                 (-0.11004761606454849, 0.06989400833845139, 1.6035118103027344),
                 (-0.1362890601158142, 0.02545354515314102, 1.6089978218078613),
                 (-0.10912385582923889, 0.06811806559562683, 1.538026213645935),
                 (-0.11176389455795288, -0.05292573571205139, 1.6127361059188843),
                 (-0.11562968045473099, -0.0643090307712555, 1.5496004819869995),
                 (-0.1396622657775879, 0.021890467032790184, 1.540109395980835),
                 (-0.10937163978815079, -0.06683972477912903, 1.4737378358840942),
                 (-0.12949436902999878, 0.014878930523991585, 1.4697015285491943),
                 (-0.10304807126522064, 0.05907934159040451, 1.4711799621582031),
                 (-0.059001702815294266, -0.08967306464910507, 1.5522369146347046),
                 (-0.05522285774350166, -0.094520203769207, 1.4740166664123535),
                 (-0.05882514640688896, -0.06627960503101349, 1.616787075996399),
                 (-0.061139099299907684, 0.08772378414869308, 1.6014370918273926),
                 (-0.05155923590064049, 0.07423426955938339, 1.4708034992218018),
                 (-0.05461548641324043, 0.08520347625017166, 1.537339448928833),
                 (-0.1414220780134201, -0.02362922765314579, 1.5459120273590088),
                 (-0.1298760622739792, -0.02362607792019844, 1.471063256263733),
                 (-0.13743171095848083, -0.016769584268331528, 1.6114506721496582),
                 (-0.11250066012144089, -0.06557437777519226, 1.5116691589355469),
                 (-0.10608596354722977, 0.06359870731830597, 1.5046031475067139),
                 (-0.13457831740379333, 0.018384698778390884, 1.5049054622650146),
                 (-0.056828588247299194, -0.09347683191299438, 1.5129716396331787),
                 (-0.05308736115694046, 0.07971887290477753, 1.5040714740753174),
                 (-0.13564907014369965, -0.02362765371799469, 1.5084877014160156),
                 (-0.11212650686502457, 0.0690060406923294, 1.5707690715789795),
                 (-0.11638496071100235, -0.06087736785411835, 1.581168293952942),
                 (-0.14277014136314392, 0.023672007024288177, 1.5745536088943481),
                 (-0.0594797320663929, -0.08161947131156921, 1.5835858583450317),
                 (-0.056217633187770844, 0.08646363019943237, 1.5693882703781128),
                 (-0.14431950449943542, -0.020199406892061234, 1.5786813497543335),
                 (0.09075929969549179, 0.03674227371811867, 1.3074089288711548),
                 (0.10447510331869125, 0.0505235455930233, 1.4542869329452515),
                 (0.11873410642147064, 0.0007384574273601174, 1.3051176071166992),
                 (0.1364138424396515, 0.007939448580145836, 1.4536800384521484),
                 (0.10163875669240952, -0.05738141015172005, 1.3065807819366455),
                 (0.1118127852678299, -0.055605314671993256, 1.4547455310821533),
                 (0.0, 0.05284145101904869, 1.381488561630249),
                 (0.09791786968708038, 0.042380113154649734, 1.3835201263427734),
                 (0.13019075989723206, 0.005108289886265993, 1.3839154243469238),
                 (0.10781174898147583, -0.05984222888946533, 1.3859254121780396),
                 (0.0, 0.05410647392272949, 1.308450698852539),
                 (0.0, 0.061172567307949066, 1.452979326248169),
                 (0.0, -0.0967494323849678, 1.30387282371521),
                 (0.0, -0.10379400104284286, 1.4552861452102661),
                 (0.0, -0.10300995409488678, 1.3846474885940552),
                 (0.04782990366220474, -0.08722887933254242, 1.3054826259613037),
                 (0.05160439386963844, -0.09081177413463593, 1.4552021026611328),
                 (0.04999244213104248, -0.09278403222560883, 1.3856379985809326),
                 (0.04657892882823944, 0.052509307861328125, 1.3081085681915283),
                 (0.05340036004781723, 0.06567124277353287, 1.4537537097930908),
                 (0.050720781087875366, 0.057182781398296356, 1.3825620412826538),
                 (0.10119648277759552, 0.04645182937383652, 1.4189035892486572),
                 (0.13330230116844177, 0.006523869000375271, 1.4187977313995361),
                 (0.10981226712465286, -0.057723771780729294, 1.4203355312347412),
                 (0.0, 0.05700700730085373, 1.417233943939209),
                 (0.0, -0.10340197384357452, 1.4199668169021606),
                 (0.05079841613769531, -0.09179790318012238, 1.4204200506210327),
                 (0.0520605705678463, 0.06142701208591461, 1.4181578159332275),
                 (0.09433858096599579, 0.0395611934363842, 1.3454644680023193),
                 (0.12446243315935135, 0.0029233735986053944, 1.3445165157318115),
                 (0.10472525656223297, -0.05861181765794754, 1.3462531566619873),
                 (0.0, 0.05347396433353424, 1.344969630241394),
                 (0.0, -0.09987969696521759, 1.3442602157592773),
                 (0.04891117289662361, -0.09000645577907562, 1.3455603122711182),
                 (0.048649854958057404, 0.05484604462981224, 1.3453352451324463),
                 (-0.09075929969549179, 0.03674227371811867, 1.3074089288711548),
                 (-0.10447510331869125, 0.0505235455930233, 1.4542869329452515),
                 (-0.11873410642147064, 0.0007384574273601174, 1.3051176071166992),
                 (-0.1364138424396515, 0.007939448580145836, 1.4536800384521484),
                 (-0.10163875669240952, -0.05738141015172005, 1.3065807819366455),
                 (-0.1118127852678299, -0.055605314671993256, 1.4547455310821533),
                 (-0.09791786968708038, 0.042380113154649734, 1.3835201263427734),
                 (-0.13019075989723206, 0.005108289886265993, 1.3839154243469238),
                 (-0.10781174898147583, -0.05984222888946533, 1.3859254121780396),
                 (-0.04782990366220474, -0.08722887933254242, 1.3054826259613037),
                 (-0.05160439386963844, -0.09081177413463593, 1.4552021026611328),
                 (-0.04999244213104248, -0.09278403222560883, 1.3856379985809326),
                 (-0.04657892882823944, 0.052509307861328125, 1.3081085681915283),
                 (-0.05340036004781723, 0.06567124277353287, 1.4537537097930908),
                 (-0.050720781087875366, 0.057182781398296356, 1.3825620412826538),
                 (-0.10119648277759552, 0.04645182937383652, 1.4189035892486572),
                 (-0.13330230116844177, 0.006523869000375271, 1.4187977313995361),
                 (-0.10981226712465286, -0.057723771780729294, 1.4203355312347412),
                 (-0.05079841613769531, -0.09179790318012238, 1.4204200506210327),
                 (-0.0520605705678463, 0.06142701208591461, 1.4181578159332275),
                 (-0.09433858096599579, 0.0395611934363842, 1.3454644680023193),
                 (-0.12446243315935135, 0.0029233735986053944, 1.3445165157318115),
                 (-0.10472525656223297, -0.05861181765794754, 1.3462531566619873),
                 (-0.04891117289662361, -0.09000645577907562, 1.3455603122711182),
                 (-0.048649854958057404, 0.05484604462981224, 1.3453352451324463),
                 (0.026021210476756096, 0.04442151263356209, 1.6914408206939697),
                 (0.0, -0.035651907324790955, 1.6829644441604614),
                 (0.03025410696864128, -0.020414743572473526, 1.6851952075958252),
                 (0.031962521374225616, -0.0252973809838295, 1.7366149425506592),
                 (0.04207022115588188, 0.007637862116098404, 1.7406976222991943),
                 (0.0, 0.05264362692832947, 1.7463287115097046),
                 (0.027812089771032333, 0.040430948138237, 1.7444844245910645),
                 (0.03955817595124245, 0.013222897425293922, 1.6883076429367065),
                 (0.0, 0.05585771054029465, 1.6928952932357788),
                 (0.0, -0.04124443978071213, 1.7341527938842773),
                 (0.0311083123087883, -0.022856060415506363, 1.7109050750732422),
                 (0.040814198553562164, 0.010430380702018738, 1.7145025730133057),
                 (0.02691664919257164, 0.042426228523254395, 1.717962622642517),
                 (0.0, 0.05425066873431206, 1.7196120023727417),
                 (0.0, -0.03844817355275154, 1.7085585594177246),
                 (-0.026021210476756096, 0.04442151263356209, 1.6914408206939697),
                 (-0.03025410696864128, -0.020414743572473526, 1.6851952075958252),
                 (-0.031962521374225616, -0.0252973809838295, 1.7366149425506592),
                 (-0.04207022115588188, 0.007637862116098404, 1.7406976222991943),
                 (-0.027812089771032333, 0.040430948138237, 1.7444844245910645),
                 (-0.03955817595124245, 0.013222897425293922, 1.6883076429367065),
                 (-0.0311083123087883, -0.022856060415506363, 1.7109050750732422),
                 (-0.040814198553562164, 0.010430380702018738, 1.7145025730133057),
                 (-0.02691664919257164, 0.042426228523254395, 1.717962622642517),
                 (0.031633514910936356, 0.05402747169137001, 1.6466206312179565),
                 (0.0, -0.03899664059281349, 1.638887882232666),
                 (0.03573792800307274, -0.02029004693031311, 1.6409595012664795),
                 (0.033433470875024796, -0.02102516032755375, 1.6814020872116089),
                 (0.04126020148396492, 0.012833161279559135, 1.6844605207443237),
                 (0.0, 0.05577259883284569, 1.6886783838272095),
                 (0.030488047748804092, 0.04423666372895241, 1.6872968673706055),
                 (0.046644389629364014, 0.01826644130051136, 1.643896460533142),
                 (0.0, 0.06768565624952316, 1.6479471921920776),
                 (0.0, -0.03641804680228233, 1.6792446374893188),
                 (0.03458569943904877, -0.020657604560256004, 1.6611807346343994),
                 (0.043952297419309616, 0.015549801290035248, 1.664178490638733),
                 (0.031060781329870224, 0.04913206771016121, 1.6669588088989258),
                 (0.0, 0.061729129403829575, 1.6683127880096436),
                 (0.0, -0.03770734369754791, 1.6590662002563477),
                 (-0.031633514910936356, 0.05402747169137001, 1.6466206312179565),
                 (-0.03573792800307274, -0.02029004693031311, 1.6409595012664795),
                 (-0.033433470875024796, -0.02102516032755375, 1.6814020872116089),
                 (-0.04126020148396492, 0.012833161279559135, 1.6844605207443237),
                 (-0.030488047748804092, 0.04423666372895241, 1.6872968673706055),
                 (-0.046644389629364014, 0.01826644130051136, 1.643896460533142),
                 (-0.03458569943904877, -0.020657604560256004, 1.6611807346343994),
                 (-0.043952297419309616, 0.015549801290035248, 1.664178490638733),
                 (-0.031060781329870224, 0.04913206771016121, 1.6669588088989258),
                 (0.0, 0.06667618453502655, 1.1971337795257568),
                 (0.06307947635650635, 0.05493178591132164, 1.1962212324142456),
                 (0.0, -0.08629391342401505, 1.1869648694992065),
                 (0.06499974429607391, -0.06606531143188477, 1.1878905296325684),
                 (0.07226093113422394, -0.07146719843149185, 1.2786166667938232),
                 (0.11557205021381378, -0.0019328041234984994, 1.2815600633621216),
                 (0.07014396786689758, 0.04979833588004112, 1.2868740558624268),
                 (0.0, -0.09086525440216064, 1.279238224029541),
                 (0.1068001538515091, -0.0014483784325420856, 1.1928092241287231),
                 (0.0, 0.05762746185064316, 1.2883625030517578),
                 (0.06863033771514893, -0.06876625120639801, 1.2332535982131958),
                 (0.06661172211170197, 0.05236506089568138, 1.2415475845336914),
                 (0.11118610203266144, -0.0016905912198126316, 1.2371846437454224),
                 (0.0, 0.062151823192834854, 1.2427481412887573),
                 (0.0, -0.08857958018779755, 1.2331016063690186),
                 (-0.06307947635650635, 0.05493178591132164, 1.1962212324142456),
                 (-0.06499974429607391, -0.06606531143188477, 1.1878905296325684),
                 (-0.07226093113422394, -0.07146719843149185, 1.2786166667938232),
                 (-0.11557205021381378, -0.0019328041234984994, 1.2815600633621216),
                 (-0.07014396786689758, 0.04979833588004112, 1.2868740558624268),
                 (-0.1068001538515091, -0.0014483784325420856, 1.1928092241287231),
                 (-0.06863033771514893, -0.06876625120639801, 1.2332535982131958),
                 (-0.06661172211170197, 0.05236506089568138, 1.2415475845336914),
                 (-0.11118610203266144, -0.0016905912198126316, 1.2371846437454224),
                 (0.0, -0.08350697159767151, 1.1560865640640259),
                 (0.0, 0.07529491931200027, 1.1554659605026245),
                 (0.10072572529315948, 0.05164135992527008, 1.157896637916565),
                 (0.0, 0.07496380805969238, 1.0674968957901),
                 (0.0, -0.06657866388559341, 1.0614733695983887),
                 (0.10832151770591736, -0.036814428865909576, 1.1547112464904785),
                 (0.08799432963132858, -0.028921231627464294, 1.072632074356079),
                 (0.08113399147987366, 0.047241903841495514, 1.0751503705978394),
                 (0.0, 0.03554561361670494, 1.0195658206939697),
                 (0.0, -0.02342166379094124, 1.0195658206939697),
                 (0.0353170670568943, -0.011106758378446102, 1.0195658206939697),
                 (0.03333571180701256, 0.02140914276242256, 1.0195658206939697),
                 (0.10193203389644623, -0.032867830246686935, 1.1136716604232788),
                 (0.09483890980482101, 0.0494416318833828, 1.1165235042572021),
                 (0.0, 0.08295539766550064, 1.1114814281463623),
                 (0.0, -0.07504281401634216, 1.1087799072265625),
                 (0.05944579839706421, -0.06016070023179054, 1.1553988456726074),
                 (0.04984140396118164, -0.047749947756528854, 1.0670527219772339),
                 (0.020837243646383286, -0.018534980714321136, 1.0195658206939697),
                 (0.054643601179122925, -0.0539553239941597, 1.1112258434295654),
                 (0.11509370058774948, 0.007413465529680252, 1.156303882598877),
                 (0.09393224865198135, 0.00916033610701561, 1.0738911628723145),
                 (0.03787653148174286, 0.005041593685746193, 1.0195658206939697),
                 (0.10574063658714294, 0.008286900818347931, 1.1150975227355957),
                 (0.05564790219068527, 0.07215355336666107, 1.1566812992095947),
                 (0.041042760014534, 0.0704001933336258, 1.070871114730835),
                 (0.019557595252990723, 0.03072073683142662, 1.0195658206939697),
                 (0.05109703913331032, 0.07488392293453217, 1.1140024662017822),
                 (0.06464749574661255, 0.03618905693292618, 1.0457398891448975),
                 (0.0, 0.061622437089681625, 1.040238380432129),
                 (0.06938496232032776, -0.022861558943986893, 1.0439295768737793),
                 (0.0, -0.0479653924703598, 1.0359084606170654),
                 (0.03382986783981323, -0.0354134775698185, 1.0399190187454224),
                 (0.07052617520093918, 0.006663748063147068, 1.0448347330093384),
                 (0.03146113455295563, 0.052636079490184784, 1.0429891347885132),
                 (0.0, -0.004106022417545319, 1.1557762622833252),
                 (0.05754685029387474, 0.005996424704790115, 1.156040072441101),
                 (0.108869269490242, -0.03762664273381233, 1.147270679473877),
                 (0.1010819524526596, 0.05300487205386162, 1.1505134105682373),
                 (0.0, 0.07939346134662628, 1.1475024223327637),
                 (0.0, -0.08522938191890717, 1.1475245952606201),
                 (0.058452799916267395, -0.0614280067384243, 1.147397518157959),
                 (0.11534140259027481, 0.007689112797379494, 1.1488920450210571),
                 (0.0545591376721859, 0.07521116733551025, 1.14900803565979),
                 (0.04111442714929581, 0.025080882012844086, 1.0260682106018066),
                 (0.04378047585487366, -0.014026976190507412, 1.0256184339523315),
                 (0.0, -0.02951900288462639, 1.0236257314682007),
                 (0.02406497113406658, -0.02272806689143181, 1.0246222019195557),
                 (0.045987606048583984, 0.0054445816203951836, 1.0258433818817139),
                 (0.022514764219522476, 0.03616511449217796, 1.025384783744812),
                 (0.0, 0.04202381893992424, 1.024701476097107),
                 (-0.10072572529315948, 0.05164135992527008, 1.157896637916565),
                 (-0.10832151770591736, -0.036814428865909576, 1.1547112464904785),
                 (-0.08799432963132858, -0.028921231627464294, 1.072632074356079),
                 (-0.08113399147987366, 0.047241903841495514, 1.0751503705978394),
                 (-0.0353170670568943, -0.011106758378446102, 1.0195658206939697),
                 (-0.03333571180701256, 0.02140914276242256, 1.0195658206939697),
                 (-0.10193203389644623, -0.032867830246686935, 1.1136716604232788),
                 (-0.09483890980482101, 0.0494416318833828, 1.1165235042572021),
                 (-0.05944579839706421, -0.06016070023179054, 1.1553988456726074),
                 (-0.04984140396118164, -0.047749947756528854, 1.0670527219772339),
                 (-0.020837243646383286, -0.018534980714321136, 1.0195658206939697),
                 (-0.054643601179122925, -0.0539553239941597, 1.1112258434295654),
                 (-0.11509370058774948, 0.007413465529680252, 1.156303882598877),
                 (-0.09393224865198135, 0.00916033610701561, 1.0738911628723145),
                 (-0.03787653148174286, 0.005041593685746193, 1.0195658206939697),
                 (-0.10574063658714294, 0.008286900818347931, 1.1150975227355957),
                 (-0.05564790219068527, 0.07215355336666107, 1.1566812992095947),
                 (-0.041042760014534, 0.0704001933336258, 1.070871114730835),
                 (-0.019557595252990723, 0.03072073683142662, 1.0195658206939697),
                 (-0.05109703913331032, 0.07488392293453217, 1.1140024662017822),
                 (-0.06464749574661255, 0.03618905693292618, 1.0457398891448975),
                 (-0.06938496232032776, -0.022861558943986893, 1.0439295768737793),
                 (-0.03382986783981323, -0.0354134775698185, 1.0399190187454224),
                 (-0.07052617520093918, 0.006663748063147068, 1.0448347330093384),
                 (-0.03146113455295563, 0.052636079490184784, 1.0429891347885132),
                 (-0.05754685029387474, 0.005996424704790115, 1.156040072441101),
                 (-0.108869269490242, -0.03762664273381233, 1.147270679473877),
                 (-0.1010819524526596, 0.05300487205386162, 1.1505134105682373),
                 (-0.058452799916267395, -0.0614280067384243, 1.147397518157959),
                 (-0.11534140259027481, 0.007689112797379494, 1.1488920450210571),
                 (-0.0545591376721859, 0.07521116733551025, 1.14900803565979),
                 (-0.04111442714929581, 0.025080882012844086, 1.0260682106018066),
                 (-0.04378047585487366, -0.014026976190507412, 1.0256184339523315),
                 (-0.02406497113406658, -0.02272806689143181, 1.0246222019195557),
                 (-0.045987606048583984, 0.0054445816203951836, 1.0258433818817139),
                 (-0.022514764219522476, 0.03616511449217796, 1.025384783744812),
                 (0.4266049563884735, 0.11445798724889755, 1.4624887704849243),
                 (0.4137689769268036, 0.11314379423856735, 1.4364114999771118),
                 (0.41269513964653015, 0.0841735303401947, 1.423842191696167),
                 (0.4233967959880829, 0.058701541274785995, 1.435001254081726),
                 (0.19313645362854004, 0.031200755387544632, 1.5423779487609863),
                 (0.19325488805770874, 0.0574929416179657, 1.5545071363449097),
                 (0.20542961359024048, 0.007219156250357628, 1.5540670156478882),
                 (0.2194347381591797, 0.00903168972581625, 1.580852746963501),
                 (0.22005490958690643, 0.03493569418787956, 1.5939139127731323),
                 (0.20728355646133423, 0.059472937136888504, 1.5812852382659912),
                 (0.43612465262413025, 0.0598611906170845, 1.460823893547058),
                 (0.43723538517951965, 0.08673137426376343, 1.4737569093704224),
                 (0.35200026631355286, 0.06953712552785873, 1.4566459655761719),
                 (0.29130539298057556, 0.054900720715522766, 1.4894496202468872),
                 (0.23061057925224304, 0.0402643159031868, 1.5222532749176025),
                 (0.3631225526332855, 0.04445905238389969, 1.4679450988769531),
                 (0.30284836888313293, 0.030216563493013382, 1.5008888244628906),
                 (0.24257415533065796, 0.015974076464772224, 1.5338325500488281),
                 (0.3761880099773407, 0.04579126089811325, 1.494022250175476),
                 (0.31625136733055115, 0.031721331179142, 1.527220606803894),
                 (0.25631478428840637, 0.017651405185461044, 1.5604188442230225),
                 (0.24470853805541992, 0.06895320862531662, 1.561106562614441),
                 (0.3053406774997711, 0.0841214656829834, 1.5282340049743652),
                 (0.3659727871417999, 0.09928973019123077, 1.495361328125),
                 (0.2570365369319916, 0.04375549405813217, 1.5734535455703735),
                 (0.3171028196811676, 0.05808078870177269, 1.5402213335037231),
                 (0.37716910243034363, 0.07240608334541321, 1.5069891214370728),
                 (0.23092687129974365, 0.06711109727621078, 1.5344736576080322),
                 (0.2918742597103119, 0.08245532959699631, 1.501786231994629),
                 (0.35282161831855774, 0.09779956191778183, 1.4690988063812256),
                 (0.15703776478767395, 0.022960854694247246, 1.5507146120071411),
                 (0.15712378919124603, 0.05821669101715088, 1.567040205001831),
                 (0.1737414449453354, -0.00927015207707882, 1.5665216445922852),
                 (0.1927299052476883, -0.006775045767426491, 1.6027240753173828),
                 (0.19352854788303375, 0.028089329600334167, 1.62035071849823),
                 (0.17613747715950012, 0.060938671231269836, 1.6032121181488037),
                 (0.1451946347951889, 0.01952599547803402, 1.5745820999145508),
                 (0.14524705708026886, 0.04101552069187164, 1.5845330953598022),
                 (0.15537604689598083, -0.00011980533599853516, 1.5842170715332031),
                 (0.16695010662078857, 0.0014010388404130936, 1.6062835454940796),
                 (0.1674368977546692, 0.02265195921063423, 1.6170275211334229),
                 (0.15683650970458984, 0.04267464950680733, 1.6065809726715088),
                 (0.19177386164665222, 0.06221499294042587, 1.5932801961898804),
                 (0.17417308688163757, 0.05971037596464157, 1.5597482919692993),
                 (0.20784059166908264, 0.03164667636156082, 1.6091364622116089),
                 (0.17406415939331055, 0.02692536637187004, 1.5445911884307861),
                 (0.1895100176334381, -0.0030176062136888504, 1.5592377185821533),
                 (0.20708481967449188, -0.0007230397313833237, 1.5927897691726685),
                 (0.42055875062942505, 0.11294542253017426, 1.4657667875289917),
                 (0.4312456250190735, 0.08530286699533463, 1.4770708084106445),
                 (0.4076913595199585, 0.1116136834025383, 1.4396710395812988),
                 (0.40664270520210266, 0.08271399885416031, 1.42711341381073),
                 (0.4173862934112549, 0.05728129297494888, 1.4382864236831665),
                 (0.43014782667160034, 0.058458149433135986, 1.4641344547271729),
                 (0.17628170549869537, 0.02449517510831356, 1.6181540489196777),
                 (0.16337935626506805, 0.04886597394943237, 1.6054389476776123),
                 (0.1616017371416092, -0.003221683669835329, 1.5782184600830078),
                 (0.1756892055273056, -0.0013705738820135593, 1.6050769090652466),
                 (0.14927315711975098, 0.046846549957990646, 1.5786031484603882),
                 (0.14920933544635773, 0.020690379664301872, 1.5664912462234497),
                 (-0.4266049563884735, 0.11445798724889755, 1.4624887704849243),
                 (-0.4137689769268036, 0.11314379423856735, 1.4364114999771118),
                 (-0.41269513964653015, 0.0841735303401947, 1.423842191696167),
                 (-0.4233967959880829, 0.058701541274785995, 1.435001254081726),
                 (-0.19313645362854004, 0.031200755387544632, 1.5423779487609863),
                 (-0.19325488805770874, 0.0574929416179657, 1.5545071363449097),
                 (-0.20542961359024048, 0.007219156250357628, 1.5540670156478882),
                 (-0.2194347381591797, 0.00903168972581625, 1.580852746963501),
                 (-0.22005490958690643, 0.03493569418787956, 1.5939139127731323),
                 (-0.20728355646133423, 0.059472937136888504, 1.5812852382659912),
                 (-0.43612465262413025, 0.0598611906170845, 1.460823893547058),
                 (-0.43723538517951965, 0.08673137426376343, 1.4737569093704224),
                 (-0.35200026631355286, 0.06953712552785873, 1.4566459655761719),
                 (-0.29130539298057556, 0.054900720715522766, 1.4894496202468872),
                 (-0.23061057925224304, 0.0402643159031868, 1.5222532749176025),
                 (-0.3631225526332855, 0.04445905238389969, 1.4679450988769531),
                 (-0.30284836888313293, 0.030216563493013382, 1.5008888244628906),
                 (-0.24257415533065796, 0.015974076464772224, 1.5338325500488281),
                 (-0.3761880099773407, 0.04579126089811325, 1.494022250175476),
                 (-0.31625136733055115, 0.031721331179142, 1.527220606803894),
                 (-0.25631478428840637, 0.017651405185461044, 1.5604188442230225),
                 (-0.24470853805541992, 0.06895320862531662, 1.561106562614441),
                 (-0.3053406774997711, 0.0841214656829834, 1.5282340049743652),
                 (-0.3659727871417999, 0.09928973019123077, 1.495361328125),
                 (-0.2570365369319916, 0.04375549405813217, 1.5734535455703735),
                 (-0.3171028196811676, 0.05808078870177269, 1.5402213335037231),
                 (-0.37716910243034363, 0.07240608334541321, 1.5069891214370728),
                 (-0.23092687129974365, 0.06711109727621078, 1.5344736576080322),
                 (-0.2918742597103119, 0.08245532959699631, 1.501786231994629),
                 (-0.35282161831855774, 0.09779956191778183, 1.4690988063812256),
                 (-0.15703776478767395, 0.022960854694247246, 1.5507146120071411),
                 (-0.15712378919124603, 0.05821669101715088, 1.567040205001831),
                 (-0.1737414449453354, -0.00927015207707882, 1.5665216445922852),
                 (-0.1927299052476883, -0.006775045767426491, 1.6027240753173828),
                 (-0.19352854788303375, 0.028089329600334167, 1.62035071849823),
                 (-0.17613747715950012, 0.060938671231269836, 1.6032121181488037),
                 (-0.1451946347951889, 0.01952599547803402, 1.5745820999145508),
                 (-0.14524705708026886, 0.04101552069187164, 1.5845330953598022),
                 (-0.15537604689598083, -0.00011980533599853516, 1.5842170715332031),
                 (-0.16695010662078857, 0.0014010388404130936, 1.6062835454940796),
                 (-0.1674368977546692, 0.02265195921063423, 1.6170275211334229),
                 (-0.15683650970458984, 0.04267464950680733, 1.6065809726715088),
                 (-0.19177386164665222, 0.06221499294042587, 1.5932801961898804),
                 (-0.17417308688163757, 0.05971037596464157, 1.5597482919692993),
                 (-0.20784059166908264, 0.03164667636156082, 1.6091364622116089),
                 (-0.17406415939331055, 0.02692536637187004, 1.5445911884307861),
                 (-0.1895100176334381, -0.0030176062136888504, 1.5592377185821533),
                 (-0.20708481967449188, -0.0007230397313833237, 1.5927897691726685),
                 (-0.42055875062942505, 0.11294542253017426, 1.4657667875289917),
                 (-0.4312456250190735, 0.08530286699533463, 1.4770708084106445),
                 (-0.4076913595199585, 0.1116136834025383, 1.4396710395812988),
                 (-0.40664270520210266, 0.08271399885416031, 1.42711341381073),
                 (-0.4173862934112549, 0.05728129297494888, 1.4382864236831665),
                 (-0.43014782667160034, 0.058458149433135986, 1.4641344547271729),
                 (-0.17628170549869537, 0.02449517510831356, 1.6181540489196777),
                 (-0.16337935626506805, 0.04886597394943237, 1.6054389476776123),
                 (-0.1616017371416092, -0.003221683669835329, 1.5782184600830078),
                 (-0.1756892055273056, -0.0013705738820135593, 1.6050769090652466),
                 (-0.14927315711975098, 0.046846549957990646, 1.5786031484603882),
                 (-0.14920933544635773, 0.020690379664301872, 1.5664912462234497),
                 (0.648197591304779, 0.07171700149774551, 1.3064476251602173),
                 (0.6552499532699585, 0.06442482024431229, 1.3164448738098145),
                 (0.639512836933136, 0.06589599698781967, 1.294649362564087),
                 (0.6355127692222595, 0.0339600034058094, 1.2940983772277832),
                 (0.4686603844165802, 0.11572089791297913, 1.4607876539230347),
                 (0.45924875140190125, 0.056031785905361176, 1.4581835269927979),
                 (0.43246641755104065, 0.061038240790367126, 1.4112147092819214),
                 (0.6484947204589844, 0.03008037619292736, 1.3164243698120117),
                 (0.4567748010158539, 0.12793633341789246, 1.43728506565094),
                 (0.4398658573627472, 0.11725024878978729, 1.413752794265747),
                 (0.5046305060386658, 0.11388149857521057, 1.4045757055282593),
                 (0.5524861812591553, 0.09982666373252869, 1.3718663454055786),
                 (0.6003419160842896, 0.0857718288898468, 1.339156985282898),
                 (0.6004840135574341, 0.03650413826107979, 1.3505607843399048),
                 (0.5534055829048157, 0.043013352900743484, 1.3864350318908691),
                 (0.5063271522521973, 0.04952257126569748, 1.4223092794418335),
                 (0.4897831380367279, 0.10435225069522858, 1.3842277526855469),
                 (0.539700448513031, 0.09145424515008926, 1.3547027111053467),
                 (0.5896177291870117, 0.07855623960494995, 1.3251776695251465),
                 (0.6079033613204956, 0.07718474417924881, 1.3512271642684937),
                 (0.5614890456199646, 0.09003012627363205, 1.3877472877502441),
                 (0.5150747299194336, 0.10287551581859589, 1.4242675304412842),
                 (0.5847678184509277, 0.04055124521255493, 1.3241300582885742),
                 (0.5340006947517395, 0.0473802424967289, 1.3531582355499268),
                 (0.4832335412502289, 0.05420923978090286, 1.3821864128112793),
                 (0.46395453810691833, 0.08587634563446045, 1.4594855308532715),
                 (0.6518723368644714, 0.0472525954246521, 1.316434621810913),
                 (0.5107009410858154, 0.07619903981685638, 1.423288345336914),
                 (0.5574473142623901, 0.06652174144983292, 1.3870911598205566),
                 (0.6041936874389648, 0.05684444308280945, 1.3508939743041992),
                 (0.44585761427879333, 0.05853501334786415, 1.4346990585327148),
                 (0.6415486931800842, 0.03185858577489853, 1.304894208908081),
                 (0.5926259160041809, 0.03852768987417221, 1.3373453617095947),
                 (0.5437031388282776, 0.04519679769873619, 1.369796633720398),
                 (0.4947803318500519, 0.05186590552330017, 1.4022479057312012),
                 (0.6375128030776978, 0.049928002059459686, 1.294373869895935),
                 (0.4361661374568939, 0.08914424479007721, 1.4124836921691895),
                 (0.4865083396434784, 0.07928074896335602, 1.383207082748413),
                 (0.5368505716323853, 0.06941724568605423, 1.3539304733276367),
                 (0.5871927738189697, 0.05955374240875244, 1.3246538639068604),
                 (0.464153528213501, 0.05535363405942917, 1.4544459581375122),
                 (0.4734959900379181, 0.11438262462615967, 1.4569828510284424),
                 (0.4377555251121521, 0.060326773673295975, 1.4081904888153076),
                 (0.46176058053970337, 0.12647205591201782, 1.4338773488998413),
                 (0.4450664222240448, 0.1159064918756485, 1.4106767177581787),
                 (0.46882474422454834, 0.08486813306808472, 1.4557143449783325),
                 (0.4509545564651489, 0.05784020200371742, 1.4313181638717651),
                 (0.44141095876693726, 0.08811663091182709, 1.4094336032867432),
                 (0.644153892993927, 0.07290459424257278, 1.3092114925384521),
                 (0.6352968215942383, 0.06696575880050659, 1.2972289323806763),
                 (0.6444379687309265, 0.030623167753219604, 1.3193087577819824),
                 (0.6512492895126343, 0.06550300121307373, 1.3193838596343994),
                 (0.6312249898910522, 0.034516945481300354, 1.2966359853744507),
                 (0.647843599319458, 0.04806308075785637, 1.319346308708191),
                 (0.6374148726463318, 0.032422106713056564, 1.3076362609863281),
                 (0.6332609057426453, 0.05074135214090347, 1.2969324588775635),
                 (-0.648197591304779, 0.07171700149774551, 1.3064476251602173),
                 (-0.6552499532699585, 0.06442482024431229, 1.3164448738098145),
                 (-0.639512836933136, 0.06589599698781967, 1.294649362564087),
                 (-0.6355127692222595, 0.0339600034058094, 1.2940983772277832),
                 (-0.4686603844165802, 0.11572089791297913, 1.4607876539230347),
                 (-0.45924875140190125, 0.056031785905361176, 1.4581835269927979),
                 (-0.43246641755104065, 0.061038240790367126, 1.4112147092819214),
                 (-0.6484947204589844, 0.03008037619292736, 1.3164243698120117),
                 (-0.4567748010158539, 0.12793633341789246, 1.43728506565094),
                 (-0.4398658573627472, 0.11725024878978729, 1.413752794265747),
                 (-0.5046305060386658, 0.11388149857521057, 1.4045757055282593),
                 (-0.5524861812591553, 0.09982666373252869, 1.3718663454055786),
                 (-0.6003419160842896, 0.0857718288898468, 1.339156985282898),
                 (-0.6004840135574341, 0.03650413826107979, 1.3505607843399048),
                 (-0.5534055829048157, 0.043013352900743484, 1.3864350318908691),
                 (-0.5063271522521973, 0.04952257126569748, 1.4223092794418335),
                 (-0.4897831380367279, 0.10435225069522858, 1.3842277526855469),
                 (-0.539700448513031, 0.09145424515008926, 1.3547027111053467),
                 (-0.5896177291870117, 0.07855623960494995, 1.3251776695251465),
                 (-0.6079033613204956, 0.07718474417924881, 1.3512271642684937),
                 (-0.5614890456199646, 0.09003012627363205, 1.3877472877502441),
                 (-0.5150747299194336, 0.10287551581859589, 1.4242675304412842),
                 (-0.5847678184509277, 0.04055124521255493, 1.3241300582885742),
                 (-0.5340006947517395, 0.0473802424967289, 1.3531582355499268),
                 (-0.4832335412502289, 0.05420923978090286, 1.3821864128112793),
                 (-0.46395453810691833, 0.08587634563446045, 1.4594855308532715),
                 (-0.6518723368644714, 0.0472525954246521, 1.316434621810913),
                 (-0.5107009410858154, 0.07619903981685638, 1.423288345336914),
                 (-0.5574473142623901, 0.06652174144983292, 1.3870911598205566),
                 (-0.6041936874389648, 0.05684444308280945, 1.3508939743041992),
                 (-0.44585761427879333, 0.05853501334786415, 1.4346990585327148),
                 (-0.6415486931800842, 0.03185858577489853, 1.304894208908081),
                 (-0.5926259160041809, 0.03852768987417221, 1.3373453617095947),
                 (-0.5437031388282776, 0.04519679769873619, 1.369796633720398),
                 (-0.4947803318500519, 0.05186590552330017, 1.4022479057312012),
                 (-0.6375128030776978, 0.049928002059459686, 1.294373869895935),
                 (-0.4361661374568939, 0.08914424479007721, 1.4124836921691895),
                 (-0.4865083396434784, 0.07928074896335602, 1.383207082748413),
                 (-0.5368505716323853, 0.06941724568605423, 1.3539304733276367),
                 (-0.5871927738189697, 0.05955374240875244, 1.3246538639068604),
                 (-0.464153528213501, 0.05535363405942917, 1.4544459581375122),
                 (-0.4734959900379181, 0.11438262462615967, 1.4569828510284424),
                 (-0.4377555251121521, 0.060326773673295975, 1.4081904888153076),
                 (-0.46176058053970337, 0.12647205591201782, 1.4338773488998413),
                 (-0.4450664222240448, 0.1159064918756485, 1.4106767177581787),
                 (-0.46882474422454834, 0.08486813306808472, 1.4557143449783325),
                 (-0.4509545564651489, 0.05784020200371742, 1.4313181638717651),
                 (-0.44141095876693726, 0.08811663091182709, 1.4094336032867432),
                 (-0.644153892993927, 0.07290459424257278, 1.3092114925384521),
                 (-0.6352968215942383, 0.06696575880050659, 1.2972289323806763),
                 (-0.6444379687309265, 0.030623167753219604, 1.3193087577819824),
                 (-0.6512492895126343, 0.06550300121307373, 1.3193838596343994),
                 (-0.6312249898910522, 0.034516945481300354, 1.2966359853744507),
                 (-0.647843599319458, 0.04806308075785637, 1.319346308708191),
                 (-0.6374148726463318, 0.032422106713056564, 1.3076362609863281),
                 (-0.6332609057426453, 0.05074135214090347, 1.2969324588775635),
                 (0.09646781533956528, 0.0042986818589270115, 0.5611421465873718),
                 (0.1262299120426178, -0.00814425852149725, 0.56205815076828),
                 (0.0666932538151741, -0.008166609331965446, 0.5619518160820007),
                 (0.12614504992961884, -0.06841614097356796, 0.5663714408874512),
                 (0.09635891020298004, -0.08091332018375397, 0.5671790838241577),
                 (0.06661733239889145, -0.0684027373790741, 0.5661759376525879),
                 (0.09750214964151382, -0.05827391892671585, 1.0153809785842896),
                 (0.06963755190372467, -0.045136064291000366, 1.0153640508651733),
                 (0.0697321742773056, 0.03142883628606796, 1.0152993202209473),
                 (0.09813845157623291, 0.04662066325545311, 1.0152885913848877),
                 (0.1259426772594452, 0.03318403661251068, 1.0153043270111084),
                 (0.13671505451202393, -0.001610590610653162, 1.01533842086792),
                 (0.12517312169075012, -0.043987639248371124, 1.0153706073760986),
                 (0.13852587342262268, -0.03825685381889343, 0.5642238259315491),
                 (0.06441153585910797, -0.06871417909860611, 0.641006588935852),
                 (0.06147579103708267, -0.06943460553884506, 0.7158177495002747),
                 (0.059216178953647614, -0.0673406794667244, 0.798352062702179),
                 (0.06048034876585007, -0.06051262095570564, 0.8867455124855042),
                 (0.06481306999921799, -0.05353861302137375, 0.9610717296600342),
                 (0.06455760449171066, -0.0010781674645841122, 0.637548565864563),
                 (0.06165449321269989, 0.009572613053023815, 0.712619960308075),
                 (0.059369102120399475, 0.019698534160852432, 0.7956185936927795),
                 (0.06058047339320183, 0.02816619724035263, 0.8849445581436157),
                 (0.06493764370679855, 0.03210638090968132, 0.9599929451942444),
                 (0.14144732058048248, -0.034709855914115906, 0.6394182443618774),
                 (0.14611990749835968, -0.02960379235446453, 0.7143456339836121),
                 (0.14963151514530182, -0.02322704717516899, 0.797088086605072),
                 (0.14760896563529968, -0.015930848196148872, 0.885908305644989),
                 (0.14209699630737305, -0.008221728727221489, 0.9605653882026672),
                 (0.09689508378505707, -0.06928057968616486, 0.9613211750984192),
                 (0.09658157080411911, -0.07722125947475433, 0.8871684074401855),
                 (0.09660553932189941, -0.08401568233966827, 0.7989931106567383),
                 (0.0964849665760994, -0.08487793803215027, 0.7165782451629639),
                 (0.09628463536500931, -0.08241802453994751, 0.6418383121490479),
                 (0.12948618829250336, 0.03309484198689461, 0.960008978843689),
                 (0.13321422040462494, 0.02956293150782585, 0.8849824666976929),
                 (0.13454991579055786, 0.021204788237810135, 0.7956776022911072),
                 (0.13190723955631256, 0.010537874884903431, 0.7127037644386292),
                 (0.1283939778804779, -0.0006430556531995535, 0.6376503705978394),
                 (0.1288238763809204, -0.0530862994492054, 0.961113691329956),
                 (0.13260498642921448, -0.05943406745791435, 0.8868235349655151),
                 (0.1340126395225525, -0.06619930267333984, 0.7984740138053894),
                 (0.13152508437633514, -0.06870522350072861, 0.7159698605537415),
                 (0.128190279006958, -0.06839185208082199, 0.6411781311035156),
                 (0.09747754782438278, 0.04949662461876869, 0.959778368473053),
                 (0.09709751605987549, 0.04796220734715462, 0.8845936059951782),
                 (0.09709727019071579, 0.03937466815114021, 0.7950828075408936),
                 (0.09688200056552887, 0.02720397152006626, 0.7120071649551392),
                 (0.09653274714946747, 0.01338670402765274, 0.636897623538971),
                 (0.05956028401851654, -0.038284674286842346, 0.5640639066696167),
                 (0.06289392709732056, -0.006853614933788776, 1.015331745147705),
                 (0.05738955736160278, -0.03489617258310318, 0.6392775774002075),
                 (0.054470133036375046, -0.029930997639894485, 0.7142188549041748),
                 (0.05219763144850731, -0.023821070790290833, 0.7969853281974792),
                 (0.05343540012836456, -0.016173209995031357, 0.8858450651168823),
                 (0.057780347764492035, -0.010716117918491364, 0.9605323076248169),
                 (0.09757447242736816, -0.05294185131788254, 1.0317754745483398),
                 (0.0725293979048729, -0.041133370250463486, 1.0317602157592773),
                 (0.07261444628238678, 0.027684185653924942, 1.0317020416259766),
                 (0.09814639389514923, 0.041338805109262466, 1.031692385673523),
                 (0.12313719838857651, 0.02926178276538849, 1.03170645236969),
                 (0.1328195482492447, -0.0020120935514569283, 1.031737208366394),
                 (0.12244550883769989, -0.040101151913404465, 1.0317661762237549),
                 (0.06646813452243805, -0.006724594160914421, 1.0317312479019165),
                 (0.09784336388111115, -0.004416704177856445, 1.0317326784133911),
                 (0.12566393613815308, -0.04468698799610138, 1.0235708951950073),
                 (0.097489133477211, -0.059233397245407104, 1.0235813856124878),
                 (0.1374160349369049, -0.001538342796266079, 1.0235379934310913),
                 (0.06921352446079254, 0.032102663069963455, 1.0234981775283813),
                 (0.0981370285153389, 0.047571104019880295, 1.0234873294830322),
                 (0.06911717355251312, -0.045856326818466187, 1.0235642194747925),
                 (0.062250763177871704, -0.006876831408590078, 1.0235313177108765),
                 (0.12644749879837036, 0.03388982266187668, 1.0235034227371216),
                 (0.09635213017463684, -0.08105074614286423, 0.5739977955818176),
                 (0.126427561044693, -0.007459163665771484, 0.5689620971679688),
                 (0.1263318508863449, -0.06841392070055008, 0.5732036232948303),
                 (0.09647374600172043, 0.00512870354577899, 0.5680609941482544),
                 (0.06641587615013123, -0.06843118369579315, 0.5730103254318237),
                 (0.06649820506572723, -0.007519212085753679, 0.5688561797142029),
                 (0.13879269361495972, -0.037932902574539185, 0.5710914134979248),
                 (0.059362027794122696, -0.03797519952058792, 0.5709332823753357),
                 (-0.09646781533956528, 0.0042986818589270115, 0.5611421465873718),
                 (-0.1262299120426178, -0.00814425852149725, 0.56205815076828),
                 (-0.0666932538151741, -0.008166609331965446, 0.5619518160820007),
                 (-0.12614504992961884, -0.06841614097356796, 0.5663714408874512),
                 (-0.09635891020298004, -0.08091332018375397, 0.5671790838241577),
                 (-0.06661733239889145, -0.0684027373790741, 0.5661759376525879),
                 (-0.09750214964151382, -0.05827391892671585, 1.0153809785842896),
                 (-0.06963755190372467, -0.045136064291000366, 1.0153640508651733),
                 (-0.0697321742773056, 0.03142883628606796, 1.0152993202209473),
                 (-0.09813845157623291, 0.04662066325545311, 1.0152885913848877),
                 (-0.1259426772594452, 0.03318403661251068, 1.0153043270111084),
                 (-0.13671505451202393, -0.001610590610653162, 1.01533842086792),
                 (-0.12517312169075012, -0.043987639248371124, 1.0153706073760986),
                 (-0.13852587342262268, -0.03825685381889343, 0.5642238259315491),
                 (-0.06441153585910797, -0.06871417909860611, 0.641006588935852),
                 (-0.06147579103708267, -0.06943460553884506, 0.7158177495002747),
                 (-0.059216178953647614, -0.0673406794667244, 0.798352062702179),
                 (-0.06048034876585007, -0.06051262095570564, 0.8867455124855042),
                 (-0.06481306999921799, -0.05353861302137375, 0.9610717296600342),
                 (-0.06455760449171066, -0.0010781674645841122, 0.637548565864563),
                 (-0.06165449321269989, 0.009572613053023815, 0.712619960308075),
                 (-0.059369102120399475, 0.019698534160852432, 0.7956185936927795),
                 (-0.06058047339320183, 0.02816619724035263, 0.8849445581436157),
                 (-0.06493764370679855, 0.03210638090968132, 0.9599929451942444),
                 (-0.14144732058048248, -0.034709855914115906, 0.6394182443618774),
                 (-0.14611990749835968, -0.02960379235446453, 0.7143456339836121),
                 (-0.14963151514530182, -0.02322704717516899, 0.797088086605072),
                 (-0.14760896563529968, -0.015930848196148872, 0.885908305644989),
                 (-0.14209699630737305, -0.008221728727221489, 0.9605653882026672),
                 (-0.09689508378505707, -0.06928057968616486, 0.9613211750984192),
                 (-0.09658157080411911, -0.07722125947475433, 0.8871684074401855),
                 (-0.09660553932189941, -0.08401568233966827, 0.7989931106567383),
                 (-0.0964849665760994, -0.08487793803215027, 0.7165782451629639),
                 (-0.09628463536500931, -0.08241802453994751, 0.6418383121490479),
                 (-0.12948618829250336, 0.03309484198689461, 0.960008978843689),
                 (-0.13321422040462494, 0.02956293150782585, 0.8849824666976929),
                 (-0.13454991579055786, 0.021204788237810135, 0.7956776022911072),
                 (-0.13190723955631256, 0.010537874884903431, 0.7127037644386292),
                 (-0.1283939778804779, -0.0006430556531995535, 0.6376503705978394),
                 (-0.1288238763809204, -0.0530862994492054, 0.961113691329956),
                 (-0.13260498642921448, -0.05943406745791435, 0.8868235349655151),
                 (-0.1340126395225525, -0.06619930267333984, 0.7984740138053894),
                 (-0.13152508437633514, -0.06870522350072861, 0.7159698605537415),
                 (-0.128190279006958, -0.06839185208082199, 0.6411781311035156),
                 (-0.09747754782438278, 0.04949662461876869, 0.959778368473053),
                 (-0.09709751605987549, 0.04796220734715462, 0.8845936059951782),
                 (-0.09709727019071579, 0.03937466815114021, 0.7950828075408936),
                 (-0.09688200056552887, 0.02720397152006626, 0.7120071649551392),
                 (-0.09653274714946747, 0.01338670402765274, 0.636897623538971),
                 (-0.05956028401851654, -0.038284674286842346, 0.5640639066696167),
                 (-0.06289392709732056, -0.006853614933788776, 1.015331745147705),
                 (-0.05738955736160278, -0.03489617258310318, 0.6392775774002075),
                 (-0.054470133036375046, -0.029930997639894485, 0.7142188549041748),
                 (-0.05219763144850731, -0.023821070790290833, 0.7969853281974792),
                 (-0.05343540012836456, -0.016173209995031357, 0.8858450651168823),
                 (-0.057780347764492035, -0.010716117918491364, 0.9605323076248169),
                 (-0.09757447242736816, -0.05294185131788254, 1.0317754745483398),
                 (-0.0725293979048729, -0.041133370250463486, 1.0317602157592773),
                 (-0.07261444628238678, 0.027684185653924942, 1.0317020416259766),
                 (-0.09814639389514923, 0.041338805109262466, 1.031692385673523),
                 (-0.12313719838857651, 0.02926178276538849, 1.03170645236969),
                 (-0.1328195482492447, -0.0020120935514569283, 1.031737208366394),
                 (-0.12244550883769989, -0.040101151913404465, 1.0317661762237549),
                 (-0.06646813452243805, -0.006724594160914421, 1.0317312479019165),
                 (-0.09784336388111115, -0.004416704177856445, 1.0317326784133911),
                 (-0.12566393613815308, -0.04468698799610138, 1.0235708951950073),
                 (-0.097489133477211, -0.059233397245407104, 1.0235813856124878),
                 (-0.1374160349369049, -0.001538342796266079, 1.0235379934310913),
                 (-0.06921352446079254, 0.032102663069963455, 1.0234981775283813),
                 (-0.0981370285153389, 0.047571104019880295, 1.0234873294830322),
                 (-0.06911717355251312, -0.045856326818466187, 1.0235642194747925),
                 (-0.062250763177871704, -0.006876831408590078, 1.0235313177108765),
                 (-0.12644749879837036, 0.03388982266187668, 1.0235034227371216),
                 (-0.09635213017463684, -0.08105074614286423, 0.5739977955818176),
                 (-0.126427561044693, -0.007459163665771484, 0.5689620971679688),
                 (-0.1263318508863449, -0.06841392070055008, 0.5732036232948303),
                 (-0.09647374600172043, 0.00512870354577899, 0.5680609941482544),
                 (-0.06641587615013123, -0.06843118369579315, 0.5730103254318237),
                 (-0.06649820506572723, -0.007519212085753679, 0.5688561797142029),
                 (-0.13879269361495972, -0.037932902574539185, 0.5710914134979248),
                 (-0.059362027794122696, -0.03797519952058792, 0.5709332823753357),
                 (0.0953674390912056, 0.032635658979415894, 0.0990830510854721),
                 (0.11068923771381378, 0.02634499967098236, 0.0990830510854721),
                 (0.08004537224769592, 0.02627333253622055, 0.0990830510854721),
                 (0.07692820578813553, 0.006770619191229343, 0.0990830510854721),
                 (0.11774923652410507, 0.009372077882289886, 0.0990830510854721),
                 (0.11140232533216476, -0.005917854607105255, 0.0990830510854721),
                 (0.09795898199081421, -0.0480077750980854, 0.4010278880596161),
                 (0.06065646559000015, -0.017349986359477043, 0.39950722455978394),
                 (0.06665345281362534, 0.02959328517317772, 0.40592363476753235),
                 (0.07088950276374817, -0.03768554702401161, 0.5236015915870667),
                 (0.0720134899020195, -0.010398384183645248, 0.5256993770599365),
                 (0.09334152936935425, 0.00780591182410717, 0.5265683531761169),
                 (0.11956141889095306, -0.0030029211193323135, 0.5256991386413574),
                 (0.1307830512523651, -0.029095379635691643, 0.5235997438430786),
                 (0.13811077177524567, 0.03733232989907265, 0.4069770276546478),
                 (0.10374660044908524, 0.048957373946905136, 0.4075028896331787),
                 (0.15205492079257965, 0.0015328866429626942, 0.40304869413375854),
                 (0.13221769034862518, -0.03729093074798584, 0.4008079171180725),
                 (0.12261199951171875, -0.055191896855831146, 0.5215020775794983),
                 (0.0943499356508255, -0.06248380243778229, 0.5206347703933716),
                 (0.0937386304140091, -0.009950010105967522, 0.0990830510854721),
                 (0.06781546771526337, -0.027517765760421753, 0.4615544080734253),
                 (0.07137595117092133, 0.009597450494766235, 0.46581149101257324),
                 (0.12883609533309937, 0.017164703458547592, 0.4663380980491638),
                 (0.12741485238075256, -0.04624141380190849, 0.4611549973487854),
                 (0.09615445882081985, -0.055245786905288696, 0.46083134412765503),
                 (0.09854406118392944, 0.02838164195418358, 0.4670356214046478),
                 (0.14141899347305298, -0.013781246729195118, 0.4633242189884186),
                 (0.13146843016147614, 0.035748884081840515, 0.3304554224014282),
                 (0.12482608109712601, 0.03290308266878128, 0.25393378734588623),
                 (0.1177501231431961, 0.029070686548948288, 0.1773574948310852),
                 (0.12723883986473083, -0.029751872643828392, 0.3248801827430725),
                 (0.12225999683141708, -0.022212814539670944, 0.2489524483680725),
                 (0.11686982959508896, -0.014074810780584812, 0.17307835817337036),
                 (0.1438099592924118, 0.003444941248744726, 0.3268927037715912),
                 (0.13556499779224396, 0.005356995854526758, 0.25073671340942383),
                 (0.12666089832782745, 0.007326316088438034, 0.17459595203399658),
                 (0.09741150587797165, 0.03681546449661255, 0.1778726577758789),
                 (0.09946908056735992, 0.04207196831703186, 0.2544611990451813),
                 (0.10160784423351288, 0.04614584892988205, 0.3309820294380188),
                 (0.07277888804674149, 0.029925482347607613, 0.32965654134750366),
                 (0.07478994131088257, 0.028995322063565254, 0.2533894181251526),
                 (0.07740331441164017, 0.027127742767333984, 0.17707481980323792),
                 (0.09472893178462982, -0.01983524113893509, 0.17286527156829834),
                 (0.09570623189210892, -0.029722586274147034, 0.24888011813163757),
                 (0.09683260321617126, -0.03886517882347107, 0.32495400309562683),
                 (0.07350793480873108, 0.0006915265694260597, 0.17354026436805725),
                 (0.07012829929590225, -0.00547244306653738, 0.24883460998535156),
                 (0.06744956970214844, -0.011411214247345924, 0.32417091727256775),
                 (-0.0953674390912056, 0.032635658979415894, 0.0990830510854721),
                 (-0.11068923771381378, 0.02634499967098236, 0.0990830510854721),
                 (-0.08004537224769592, 0.02627333253622055, 0.0990830510854721),
                 (-0.07692820578813553, 0.006770619191229343, 0.0990830510854721),
                 (-0.11774923652410507, 0.009372077882289886, 0.0990830510854721),
                 (-0.11140232533216476, -0.005917854607105255, 0.0990830510854721),
                 (-0.09795898199081421, -0.0480077750980854, 0.4010278880596161),
                 (-0.06065646559000015, -0.017349986359477043, 0.39950722455978394),
                 (-0.06665345281362534, 0.02959328517317772, 0.40592363476753235),
                 (-0.07088950276374817, -0.03768554702401161, 0.5236015915870667),
                 (-0.0720134899020195, -0.010398384183645248, 0.5256993770599365),
                 (-0.09334152936935425, 0.00780591182410717, 0.5265683531761169),
                 (-0.11956141889095306, -0.0030029211193323135, 0.5256991386413574),
                 (-0.1307830512523651, -0.029095379635691643, 0.5235997438430786),
                 (-0.13811077177524567, 0.03733232989907265, 0.4069770276546478),
                 (-0.10374660044908524, 0.048957373946905136, 0.4075028896331787),
                 (-0.15205492079257965, 0.0015328866429626942, 0.40304869413375854),
                 (-0.13221769034862518, -0.03729093074798584, 0.4008079171180725),
                 (-0.12261199951171875, -0.055191896855831146, 0.5215020775794983),
                 (-0.0943499356508255, -0.06248380243778229, 0.5206347703933716),
                 (-0.0937386304140091, -0.009950010105967522, 0.0990830510854721),
                 (-0.06781546771526337, -0.027517765760421753, 0.4615544080734253),
                 (-0.07137595117092133, 0.009597450494766235, 0.46581149101257324),
                 (-0.12883609533309937, 0.017164703458547592, 0.4663380980491638),
                 (-0.12741485238075256, -0.04624141380190849, 0.4611549973487854),
                 (-0.09615445882081985, -0.055245786905288696, 0.46083134412765503),
                 (-0.09854406118392944, 0.02838164195418358, 0.4670356214046478),
                 (-0.14141899347305298, -0.013781246729195118, 0.4633242189884186),
                 (-0.13146843016147614, 0.035748884081840515, 0.3304554224014282),
                 (-0.12482608109712601, 0.03290308266878128, 0.25393378734588623),
                 (-0.1177501231431961, 0.029070686548948288, 0.1773574948310852),
                 (-0.12723883986473083, -0.029751872643828392, 0.3248801827430725),
                 (-0.12225999683141708, -0.022212814539670944, 0.2489524483680725),
                 (-0.11686982959508896, -0.014074810780584812, 0.17307835817337036),
                 (-0.1438099592924118, 0.003444941248744726, 0.3268927037715912),
                 (-0.13556499779224396, 0.005356995854526758, 0.25073671340942383),
                 (-0.12666089832782745, 0.007326316088438034, 0.17459595203399658),
                 (-0.09741150587797165, 0.03681546449661255, 0.1778726577758789),
                 (-0.09946908056735992, 0.04207196831703186, 0.2544611990451813),
                 (-0.10160784423351288, 0.04614584892988205, 0.3309820294380188),
                 (-0.07277888804674149, 0.029925482347607613, 0.32965654134750366),
                 (-0.07478994131088257, 0.028995322063565254, 0.2533894181251526),
                 (-0.07740331441164017, 0.027127742767333984, 0.17707481980323792),
                 (-0.09472893178462982, -0.01983524113893509, 0.17286527156829834),
                 (-0.09570623189210892, -0.029722586274147034, 0.24888011813163757),
                 (-0.09683260321617126, -0.03886517882347107, 0.32495400309562683),
                 (-0.07350793480873108, 0.0006915265694260597, 0.17354026436805725),
                 (-0.07012829929590225, -0.00547244306653738, 0.24883460998535156),
                 (-0.06744956970214844, -0.011411214247345924, 0.32417091727256775),
                 (0.05328651890158653, -0.08914757519960403, 1.6451493138447404e-05),
                 (0.09955743700265884, -0.08914757519960403, 1.6451493138447404e-05),
                 (0.05569767206907272, -0.0892755538225174, 0.03743759170174599),
                 (0.09143204241991043, -0.088973268866539, 0.03831549733877182),
                 (0.07933138310909271, 0.03198917955160141, 0.07440334558486938),
                 (0.09532959759235382, 0.03587111830711365, 0.07440334558486938),
                 (0.07426987588405609, 0.03929029405117035, 1.6451493138447404e-05),
                 (0.09385436773300171, 0.046854786574840546, 1.6451493138447404e-05),
                 (0.11357112228870392, 0.043262116611003876, 1.6451493138447404e-05),
                 (0.11368461698293686, 0.03404819220304489, 0.07440334558486938),
                 (0.13300538063049316, -0.0892755538225174, 0.02122347801923752),
                 (0.137258380651474, -0.08914757519960403, 1.6451493138447404e-05),
                 (0.06730987876653671, -0.003311421722173691, 1.6451493138447404e-05),
                 (0.07238402962684631, -0.003657742403447628, 0.07440334558486938),
                 (0.09574602544307709, 0.0017439965158700943, 1.6451493138447404e-05),
                 (0.11936414241790771, -0.002203996991738677, 0.07440334558486938),
                 (0.12189752608537674, -0.0006570164114236832, 1.6451493138447404e-05),
                 (0.09403681755065918, -0.0055386703461408615, 0.07440334558486938),
                 (0.06029819697141647, -0.04622950032353401, 1.6451493138447404e-05),
                 (0.06404085457324982, -0.0464666485786438, 0.05592046678066254),
                 (0.09765173494815826, -0.043701790273189545, 1.6451493138447404e-05),
                 (0.12618476152420044, -0.04573977366089821, 0.04781341180205345),
                 (0.13028576970100403, -0.044902294874191284, 1.6451493138447404e-05),
                 (0.0927344262599945, -0.047255970537662506, 0.0563594214618206),
                 (0.0532851405441761, -0.08921156823635101, 0.018727021291851997),
                 (0.07625612616539001, 0.03563973680138588, 0.037209898233413696),
                 (0.11417694389820099, 0.038655154407024384, 0.037209898233413696),
                 (0.1370483636856079, -0.08921156823635101, 0.010619964450597763),
                 (0.09457579255104065, 0.0413629524409771, 0.037209898233413696),
                 (0.12138786166906357, -0.0014305058866739273, 0.037209898233413696),
                 (0.06909596920013428, -0.0034845825284719467, 0.037209898233413696),
                 (0.12921810150146484, -0.0453210324048996, 0.02391493134200573),
                 (0.06119055300951004, -0.046348072588443756, 0.027968458831310272),
                 (-0.05328651890158653, -0.08914757519960403, 1.6451493138447404e-05),
                 (-0.09955743700265884, -0.08914757519960403, 1.6451493138447404e-05),
                 (-0.05569767206907272, -0.0892755538225174, 0.03743759170174599),
                 (-0.09143204241991043, -0.088973268866539, 0.03831549733877182),
                 (-0.07933138310909271, 0.03198917955160141, 0.07440334558486938),
                 (-0.09532959759235382, 0.03587111830711365, 0.07440334558486938),
                 (-0.07426987588405609, 0.03929029405117035, 1.6451493138447404e-05),
                 (-0.09385436773300171, 0.046854786574840546, 1.6451493138447404e-05),
                 (-0.11357112228870392, 0.043262116611003876, 1.6451493138447404e-05),
                 (-0.11368461698293686, 0.03404819220304489, 0.07440334558486938),
                 (-0.13300538063049316, -0.0892755538225174, 0.02122347801923752),
                 (-0.137258380651474, -0.08914757519960403, 1.6451493138447404e-05),
                 (-0.06730987876653671, -0.003311421722173691, 1.6451493138447404e-05),
                 (-0.07238402962684631, -0.003657742403447628, 0.07440334558486938),
                 (-0.09574602544307709, 0.0017439965158700943, 1.6451493138447404e-05),
                 (-0.11936414241790771, -0.002203996991738677, 0.07440334558486938),
                 (-0.12189752608537674, -0.0006570164114236832, 1.6451493138447404e-05),
                 (-0.09403681755065918, -0.0055386703461408615, 0.07440334558486938),
                 (-0.06029819697141647, -0.04622950032353401, 1.6451493138447404e-05),
                 (-0.06404085457324982, -0.0464666485786438, 0.05592046678066254),
                 (-0.09765173494815826, -0.043701790273189545, 1.6451493138447404e-05),
                 (-0.12618476152420044, -0.04573977366089821, 0.04781341180205345),
                 (-0.13028576970100403, -0.044902294874191284, 1.6451493138447404e-05),
                 (-0.0927344262599945, -0.047255970537662506, 0.0563594214618206),
                 (-0.0532851405441761, -0.08921156823635101, 0.018727021291851997),
                 (-0.07625612616539001, 0.03563973680138588, 0.037209898233413696),
                 (-0.11417694389820099, 0.038655154407024384, 0.037209898233413696),
                 (-0.1370483636856079, -0.08921156823635101, 0.010619964450597763),
                 (-0.09457579255104065, 0.0413629524409771, 0.037209898233413696),
                 (-0.12138786166906357, -0.0014305058866739273, 0.037209898233413696),
                 (-0.06909596920013428, -0.0034845825284719467, 0.037209898233413696),
                 (-0.12921810150146484, -0.0453210324048996, 0.02391493134200573),
                 (-0.06119055300951004, -0.046348072588443756, 0.027968458831310272),
                 (0.052712332457304, -0.16927623748779297, 4.3115083826705813e-05),
                 (0.05270353704690933, -0.16864407062530518, 0.016626425087451935),
                 (0.10080889612436295, -0.1724851429462433, 4.3115083826705813e-05),
                 (0.04756326600909233, -0.13579341769218445, 4.3115083826705813e-05),
                 (0.04719487577676773, -0.13586272299289703, 0.016683688387274742),
                 (0.05574212223291397, -0.16640111804008484, 0.029399940744042397),
                 (0.05134596675634384, -0.1368119716644287, 0.02841792441904545),
                 (0.09872428327798843, -0.13270486891269684, 0.026636486873030663),
                 (0.056548748165369034, -0.09386802464723587, 0.03586961328983307),
                 (0.09215101599693298, -0.09386801719665527, 0.03675778955221176),
                 (0.1347932666540146, -0.09386802464723587, 0.021727724000811577),
                 (0.13735172152519226, -0.09386802464723587, 0.012762844562530518),
                 (0.13735689222812653, -0.09386802464723587, 4.311464726924896e-05),
                 (0.13930734992027283, -0.13114693760871887, 0.012885792180895805),
                 (0.13477486371994019, -0.13097046315670013, 0.02217167802155018),
                 (0.1373930126428604, -0.13183441758155823, 4.3115083826705813e-05),
                 (0.098534494638443, -0.1333507001399994, 4.3115083826705813e-05),
                 (0.13078904151916504, -0.1605982482433319, 4.3115083826705813e-05),
                 (0.13141635060310364, -0.16004110872745514, 0.013172894716262817),
                 (0.12998831272125244, -0.1577690988779068, 0.024378325790166855),
                 (0.1012982726097107, -0.1742333471775055, 0.016443680971860886),
                 (0.10195735841989517, -0.169308602809906, 0.02778901904821396),
                 (0.09826432168483734, -0.09386802464723587, 4.311464726924896e-05),
                 (0.052308253943920135, -0.09386802464723587, 4.311464726924896e-05),
                 (0.05392277613282204, -0.09386802464723587, 0.016871647909283638),
                 (0.07456174492835999, -0.1769571751356125, 4.3115083826705813e-05),
                 (0.07513507455587387, -0.1346692442893982, 0.02935776114463806),
                 (0.077850341796875, -0.09386802464723587, 0.03664005547761917),
                 (0.07572049647569656, -0.1776730865240097, 0.016698505729436874),
                 (0.0774734616279602, -0.1740390807390213, 0.03138570487499237),
                 (0.07304887473583221, -0.13457204401493073, 4.3115083826705813e-05),
                 (0.07528628408908844, -0.09386802464723587, 4.311464726924896e-05),
                 (-0.052712332457304, -0.16927623748779297, 4.3115083826705813e-05),
                 (-0.05270353704690933, -0.16864407062530518, 0.016626425087451935),
                 (-0.10080889612436295, -0.1724851429462433, 4.3115083826705813e-05),
                 (-0.04756326600909233, -0.13579341769218445, 4.3115083826705813e-05),
                 (-0.04719487577676773, -0.13586272299289703, 0.016683688387274742),
                 (-0.05574212223291397, -0.16640111804008484, 0.029399940744042397),
                 (-0.05134596675634384, -0.1368119716644287, 0.02841792441904545),
                 (-0.09872428327798843, -0.13270486891269684, 0.026636486873030663),
                 (-0.056548748165369034, -0.09386802464723587, 0.03586961328983307),
                 (-0.09215101599693298, -0.09386801719665527, 0.03675778955221176),
                 (-0.1347932666540146, -0.09386802464723587, 0.021727724000811577),
                 (-0.13735172152519226, -0.09386802464723587, 0.012762844562530518),
                 (-0.13735689222812653, -0.09386802464723587, 4.311464726924896e-05),
                 (-0.13930734992027283, -0.13114693760871887, 0.012885792180895805),
                 (-0.13477486371994019, -0.13097046315670013, 0.02217167802155018),
                 (-0.1373930126428604, -0.13183441758155823, 4.3115083826705813e-05),
                 (-0.098534494638443, -0.1333507001399994, 4.3115083826705813e-05),
                 (-0.13078904151916504, -0.1605982482433319, 4.3115083826705813e-05),
                 (-0.13141635060310364, -0.16004110872745514, 0.013172894716262817),
                 (-0.12998831272125244, -0.1577690988779068, 0.024378325790166855),
                 (-0.1012982726097107, -0.1742333471775055, 0.016443680971860886),
                 (-0.10195735841989517, -0.169308602809906, 0.02778901904821396),
                 (-0.09826432168483734, -0.09386802464723587, 4.311464726924896e-05),
                 (-0.052308253943920135, -0.09386802464723587, 4.311464726924896e-05),
                 (-0.05392277613282204, -0.09386802464723587, 0.016871647909283638),
                 (-0.07456174492835999, -0.1769571751356125, 4.3115083826705813e-05),
                 (-0.07513507455587387, -0.1346692442893982, 0.02935776114463806),
                 (-0.077850341796875, -0.09386802464723587, 0.03664005547761917),
                 (-0.07572049647569656, -0.1776730865240097, 0.016698505729436874),
                 (-0.0774734616279602, -0.1740390807390213, 0.03138570487499237),
                 (-0.07304887473583221, -0.13457204401493073, 4.3115083826705813e-05),
                 (-0.07528628408908844, -0.09386802464723587, 4.311464726924896e-05),
                 (0.09546422958374023, 0.03538104146718979, 0.09642976522445679),
                 (0.11022026091814041, 0.029322674497961998, 0.09642976522445679),
                 (0.08070793747901917, 0.029253650456666946, 0.09642976522445679),
                 (0.07770588248968124, 0.0071265981532633305, 0.09642976522445679),
                 (0.11701955646276474, 0.009631996974349022, 0.09642976522445679),
                 (0.11090701073408127, -0.005093337967991829, 0.09642976522445679),
                 (0.0938955619931221, -0.008976604789495468, 0.09642976522445679),
                 (0.09546422958374023, 0.03538104146718979, 0.07633331418037415),
                 (0.11022026091814041, 0.029322674497961998, 0.07633331418037415),
                 (0.08070793747901917, 0.029253650456666946, 0.07633331418037415),
                 (0.07770588248968124, 0.0071265981532633305, 0.07633331418037415),
                 (0.11701955646276474, 0.009631996974349022, 0.07633331418037415),
                 (0.11090701073408127, -0.005093337967991829, 0.07633331418037415),
                 (0.0938955619931221, -0.008976604789495468, 0.07633331418037415),
                 (-0.09546422958374023, 0.03538104146718979, 0.09642976522445679),
                 (-0.11022026091814041, 0.029322674497961998, 0.09642976522445679),
                 (-0.08070793747901917, 0.029253650456666946, 0.09642976522445679),
                 (-0.07770588248968124, 0.0071265981532633305, 0.09642976522445679),
                 (-0.11701955646276474, 0.009631996974349022, 0.09642976522445679),
                 (-0.11090701073408127, -0.005093337967991829, 0.09642976522445679),
                 (-0.0938955619931221, -0.008976604789495468, 0.09642976522445679),
                 (-0.09546422958374023, 0.03538104146718979, 0.07633331418037415),
                 (-0.11022026091814041, 0.029322674497961998, 0.07633331418037415),
                 (-0.08070793747901917, 0.029253650456666946, 0.07633331418037415),
                 (-0.07770588248968124, 0.0071265981532633305, 0.07633331418037415),
                 (-0.11701955646276474, 0.009631996974349022, 0.07633331418037415),
                 (-0.11090701073408127, -0.005093337967991829, 0.07633331418037415),
                 (-0.0938955619931221, -0.008976604789495468, 0.07633331418037415),
                 (0.6733129024505615, 0.06522541493177414, 1.288529872894287),
                 (0.6774782538414001, 0.058863382786512375, 1.296905755996704),
                 (0.6658828854560852, 0.05949925258755684, 1.2785123586654663),
                 (0.6617207527160645, 0.03050544299185276, 1.278597116470337),
                 (0.6736389994621277, 0.027153152972459793, 1.2958816289901733),
                 (0.6755586266517639, 0.043008264154195786, 1.296393632888794),
                 (0.6676799058914185, 0.028829287737607956, 1.2872394323349),
                 (0.663801908493042, 0.04500234127044678, 1.2785545587539673),
                 (0.6530027985572815, 0.0682431012392044, 1.3024303913116455),
                 (0.6571093201637268, 0.061927780508995056, 1.3108701705932617),
                 (0.6454503536224365, 0.06249912083148956, 1.2925153970718384),
                 (0.6408690214157104, 0.033572252839803696, 1.2929848432540894),
                 (0.6528072357177734, 0.030266262590885162, 1.3102644681930542),
                 (0.654958188533783, 0.046097029000520706, 1.3105674982070923),
                 (0.6468381881713867, 0.03191924840211868, 1.3016246557235718),
                 (0.6431597471237183, 0.04803568497300148, 1.2927501201629639),
                 (-0.6733129024505615, 0.06522541493177414, 1.288529872894287),
                 (-0.6774782538414001, 0.058863382786512375, 1.296905755996704),
                 (-0.6658828854560852, 0.05949925258755684, 1.2785123586654663),
                 (-0.6617207527160645, 0.03050544299185276, 1.278597116470337),
                 (-0.6736389994621277, 0.027153152972459793, 1.2958816289901733),
                 (-0.6755586266517639, 0.043008264154195786, 1.296393632888794),
                 (-0.6676799058914185, 0.028829287737607956, 1.2872394323349),
                 (-0.663801908493042, 0.04500234127044678, 1.2785545587539673),
                 (-0.6530027985572815, 0.0682431012392044, 1.3024303913116455),
                 (-0.6571093201637268, 0.061927780508995056, 1.3108701705932617),
                 (-0.6454503536224365, 0.06249912083148956, 1.2925153970718384),
                 (-0.6408690214157104, 0.033572252839803696, 1.2929848432540894),
                 (-0.6528072357177734, 0.030266262590885162, 1.3102644681930542),
                 (-0.654958188533783, 0.046097029000520706, 1.3105674982070923),
                 (-0.6468381881713867, 0.03191924840211868, 1.3016246557235718),
                 (-0.6431597471237183, 0.04803568497300148, 1.2927501201629639),
                 (0.06346721202135086, 0.014298657886683941, 1.771346092224121),
                 (0.05131347104907036, -0.07514455914497375, 1.7531567811965942),
                 (0.07860536873340607, 0.0814245343208313, 1.8957425355911255),
                 (0.07315674424171448, 0.057673901319503784, 1.9404240846633911),
                 (0.07389818131923676, -0.0799219086766243, 1.8221367597579956),
                 (0.07468393445014954, -0.01232116762548685, 1.9538077116012573),
                 (0.07246143370866776, -0.060782305896282196, 1.929227352142334),
                 (0.07477156817913055, 0.08123470097780228, 1.8399507999420166),
                 (-2.0756410479272347e-11, 0.1157064214348793, 1.8983715772628784),
                 (-2.0756410479272347e-11, 0.05207967013120651, 1.7555207014083862),
                 (-2.0756410479272347e-11, 0.06920942664146423, 1.9668489694595337),
                 (-2.0756410479272347e-11, 0.11218755692243576, 1.822123408317566),
                 (-2.0756410479272347e-11, -0.11753702908754349, 1.8255048990249634),
                 (-2.0756410479272347e-11, -0.10089676827192307, 1.7330085039138794),
                 (-2.0756410479272347e-11, -0.09002277255058289, 1.9468177556991577),
                 (-2.0756410479272347e-11, -0.012180049903690815, 1.9777284860610962),
                 (0.08354228734970093, -0.013989144004881382, 1.8131085634231567),
                 (0.08596543967723846, 0.03152410686016083, 1.8767653703689575),
                 (0.06914299726486206, -0.057307034730911255, 1.8727281093597412),
                 (0.07278035581111908, 0.047208771109580994, 1.8051072359085083),
                 (-2.0756410479272347e-11, 0.08553274720907211, 1.7860503196716309),
                 (-2.0756410479272347e-11, -0.10226335376501083, 1.8780537843704224),
                 (0.08471154421567917, 0.012497397139668465, 1.8424683809280396),
                 (-0.06346721202135086, 0.014298657886683941, 1.771346092224121),
                 (-0.05131347104907036, -0.07514455914497375, 1.7531567811965942),
                 (-0.07860536873340607, 0.0814245343208313, 1.8957425355911255),
                 (-0.07315674424171448, 0.057673901319503784, 1.9404240846633911),
                 (-0.07389818131923676, -0.0799219086766243, 1.8221367597579956),
                 (-0.07468393445014954, -0.01232116762548685, 1.9538077116012573),
                 (-0.07246143370866776, -0.060782305896282196, 1.929227352142334),
                 (-0.07477156817913055, 0.08123470097780228, 1.8399507999420166),
                 (-0.08354228734970093, -0.013989144004881382, 1.8131085634231567),
                 (-0.08596543967723846, 0.03152410686016083, 1.8767653703689575),
                 (-0.06914299726486206, -0.057307034730911255, 1.8727281093597412),
                 (-0.07278035581111908, 0.047208771109580994, 1.8051072359085083),
                 (-0.08471154421567917, 0.012497397139668465, 1.8424683809280396),
                 (-0.08516044914722443, -0.044590968638658524, 1.6110780239105225),
                 (-0.07694794982671738, 0.04533616453409195, 1.6327987909317017),
                 (0.08516044914722443, -0.044590968638658524, 1.6110780239105225),
                 (0.07694794982671738, 0.04533616453409195, 1.6327987909317017),
                 (-0.09949882328510284, -0.04415321722626686, 1.5707119703292847),
                 (-0.1024317815899849, -0.04861639812588692, 1.5843162536621094),
                 (-0.09652157127857208, -0.049024250358343124, 1.6003652811050415),
                 (-0.08939856290817261, -0.02783643826842308, 1.6169513463974),
                 (-0.09035436064004898, -0.0026385963428765535, 1.624862790107727),
                 (-0.08691087365150452, 0.02464449033141136, 1.6305433511734009),
                 (-0.09037632495164871, 0.05448707938194275, 1.6189500093460083),
                 (-0.09940005093812943, 0.061707451939582825, 1.599170446395874),
                 (-0.04381858557462692, 0.051253147423267365, 1.6524738073349),
                 (0.0, 0.05340057238936424, 1.6691089868545532),
                 (0.04381858557462692, 0.051253147423267365, 1.6524738073349),
                 (0.09037632495164871, 0.05448707938194275, 1.6189500093460083),
                 (0.09940005093812943, 0.061707451939582825, 1.599170446395874),
                 (0.08691087365150452, 0.02464449033141136, 1.6305433511734009),
                 (0.09035436064004898, -0.0026385963428765535, 1.624862790107727),
                 (0.08939856290817261, -0.02783643826842308, 1.6169513463974),
                 (0.09652157127857208, -0.049024250358343124, 1.6003652811050415),
                 (0.1024317815899849, -0.04861639812588692, 1.5843162536621094),
                 (0.05222252383828163, -0.04720602184534073, 1.6178566217422485),
                 (0.0, -0.051654331386089325, 1.6281802654266357),
                 (-0.05222252383828163, -0.04720602184534073, 1.6178566217422485),
                 (-0.1302393227815628, -0.023566553369164467, 1.5854809284210205),
                 (-0.11889059841632843, -0.02746470831334591, 1.6029850244522095),
                 (-0.13774994015693665, 0.006609075237065554, 1.5893146991729736),
                 (-0.12400947511196136, 0.0010219275718554854, 1.6081085205078125),
                 (-0.12731076776981354, 0.036613985896110535, 1.5939781665802002),
                 (-0.11424195766448975, 0.030291510745882988, 1.613533616065979),
                 (-0.05382545292377472, 0.0774654969573021, 1.6044082641601562),
                 (-0.04890734702348709, 0.06851977854967117, 1.6309555768966675),
                 (0.0, 0.08272343873977661, 1.6120407581329346),
                 (0.0, 0.07539726793766022, 1.6380178928375244),
                 (0.05382545292377472, 0.0774654969573021, 1.6044082641601562),
                 (0.04890734702348709, 0.06851977854967117, 1.6309555768966675),
                 (0.12731076776981354, 0.036613985896110535, 1.5939781665802002),
                 (0.11424195766448975, 0.030291510745882988, 1.613533616065979),
                 (0.13774994015693665, 0.006609075237065554, 1.5893146991729736),
                 (0.12400947511196136, 0.0010219275718554854, 1.6081085205078125),
                 (0.1302393227815628, -0.023566553369164467, 1.5854809284210205),
                 (0.11889059841632843, -0.02746470831334591, 1.6029850244522095),
                 (0.05692581087350845, -0.06274396926164627, 1.5851937532424927),
                 (0.055346932262182236, -0.059448305517435074, 1.6028897762298584),
                 (0.0, -0.06866384297609329, 1.5881465673446655),
                 (0.0, -0.06532104313373566, 1.608962059020996),
                 (-0.05692581087350845, -0.06274396926164627, 1.5851937532424927),
                 (-0.055346932262182236, -0.059448305517435074, 1.6028897762298584),
                 (0.04676186293363571, 0.025944625958800316, 1.6551389694213867),
                 (0.0, 0.02510775439441204, 1.670271873474121),
                 (-0.04676186293363571, 0.025944625958800316, 1.6551389694213867),
                 (0.05188148096203804, -0.001397373154759407, 1.6437181234359741),
                 (0.0, -0.004176018759608269, 1.662871241569519),
                 (-0.05188148096203804, -0.001397373154759407, 1.6437181234359741),
                 (0.05358497425913811, -0.026525365188717842, 1.6303777694702148),
                 (0.0, -0.030163928866386414, 1.6462467908859253),
                 (-0.05358497425913811, -0.026525365188717842, 1.6303777694702148),
                 (-0.12730149924755096, -0.01958182081580162, 1.5713342428207397),
                 (-0.13570895791053772, 0.00986403413116932, 1.5741157531738281),
                 (-0.12600435316562653, 0.039018888026475906, 1.578249216079712),
                 (-0.09826464205980301, 0.0631631538271904, 1.5826865434646606),
                 (-0.05366523191332817, 0.07847677916288376, 1.5860899686813354),
                 (0.0, 0.08366934955120087, 1.5883865356445312),
                 (0.05366523191332817, 0.07847677916288376, 1.5860899686813354),
                 (0.09826464205980301, 0.0631631538271904, 1.5826865434646606),
                 (0.12600435316562653, 0.039018888026475906, 1.578249216079712),
                 (0.13570895791053772, 0.00986403413116932, 1.5741157531738281),
                 (0.12730149924755096, -0.01958182081580162, 1.5713342428207397),
                 (0.09949882328510284, -0.04415321722626686, 1.5707119703292847),
                 (0.054770808666944504, -0.05902878940105438, 1.5710514783859253),
                 (0.0, -0.06431763619184494, 1.5720851421356201),
                 (-0.054770808666944504, -0.05902878940105438, 1.5710514783859253),
                 (0.7279959321022034, 0.08368274569511414, 1.248127818107605),
                 (0.7328096628189087, 0.075212262570858, 1.254614233970642),
                 (0.723016619682312, 0.07105682045221329, 1.2414133548736572),
                 (0.6768002510070801, 0.038210414350032806, 1.3004714250564575),
                 (0.6792046427726746, 0.07105568051338196, 1.2973430156707764),
                 (0.6726148128509521, 0.018742265179753304, 1.298661708831787),
                 (0.6626414656639099, 0.01673581264913082, 1.2850837707519531),
                 (0.6608743071556091, 0.026440564543008804, 1.281723141670227),
                 (0.6626222133636475, 0.05646082013845444, 1.2813090085983276),
                 (0.6656275391578674, 0.07226301729679108, 1.2813259363174438),
                 (0.6740082502365112, 0.0800352692604065, 1.2894243001937866),
                 (0.7213388681411743, 0.053230732679367065, 1.2380902767181396),
                 (0.7189789414405823, 0.012175485491752625, 1.2400267124176025),
                 (0.7196219563484192, 0.0009085634956136346, 1.2442350387573242),
                 (0.7258826494216919, 0.003781082108616829, 1.2540887594223022),
                 (0.7300921678543091, 0.029629603028297424, 1.2560874223709106),
                 (0.7034462094306946, 0.03392000496387482, 1.278279423713684),
                 (0.6931492686271667, 0.05459713190793991, 1.2597678899765015),
                 (0.7010021209716797, 0.08185900747776031, 1.2687760591506958),
                 (0.6901781558990479, 0.0194605253636837, 1.26127290725708),
                 (0.691379189491272, 0.00897569302469492, 1.2650595903396606),
                 (0.699248731136322, 0.011261673644185066, 1.2763752937316895),
                 (0.706007182598114, 0.07313397526741028, 1.275978684425354),
                 (0.695531964302063, 0.07116305828094482, 1.261614441871643),
                 (0.7167691588401794, 0.03177480399608612, 1.267183542251587),
                 (0.7064022421836853, 0.05421724170446396, 1.2482802867889404),
                 (0.7144989967346191, 0.08277087658643723, 1.2584519386291504),
                 (0.7043319344520569, 0.01604587212204933, 1.2504723072052002),
                 (0.705500602722168, 0.00494212843477726, 1.2546472549438477),
                 (0.7125656604766846, 0.007521377876400948, 1.2652320861816406),
                 (0.719408392906189, 0.07417312264442444, 1.2652963399887085),
                 (0.7092925310134888, 0.07097531110048294, 1.2518993616104126),
                 (0.6926059126853943, 0.07209481298923492, 1.28666090965271),
                 (0.6801857352256775, 0.07179831713438034, 1.27084219455719),
                 (0.6901232004165649, 0.03606521338224411, 1.2893754243850708),
                 (0.6772818565368652, 0.055980902165174484, 1.270603895187378),
                 (0.6875051856040955, 0.0809471383690834, 1.2791001796722412),
                 (0.6727683544158936, 0.02355942130088806, 1.2714101076126099),
                 (0.6742353439331055, 0.013386741280555725, 1.2749955654144287),
                 (0.6859318017959595, 0.015001969411969185, 1.2875185012817383),
                 (0.6783395409584045, 0.05357034131884575, 1.2996091842651367),
                 (0.7321269512176514, 0.052215076982975006, 1.2560385465621948),
                 (0.7052332758903503, 0.05289270728826523, 1.2778239250183105),
                 (0.7186800837516785, 0.05255388468503952, 1.266931414604187),
                 (0.6917864084243774, 0.05323152616620064, 1.288716435432434),
                 (0.6617482900619507, 0.04145069420337677, 1.2815160751342773),
                 (0.7201589345932007, 0.032703109085559845, 1.239058494567871),
                 (0.6916637420654297, 0.037028826773166656, 1.2605204582214355),
                 (0.7053670883178711, 0.035131558775901794, 1.2493762969970703),
                 (0.6750251054763794, 0.03977016359567642, 1.2710070610046387),
                 (-0.7279959321022034, 0.08368274569511414, 1.248127818107605),
                 (-0.7328096628189087, 0.075212262570858, 1.254614233970642),
                 (-0.723016619682312, 0.07105682045221329, 1.2414133548736572),
                 (-0.6768002510070801, 0.038210414350032806, 1.3004714250564575),
                 (-0.6792046427726746, 0.07105568051338196, 1.2973430156707764),
                 (-0.6726148128509521, 0.018742265179753304, 1.298661708831787),
                 (-0.6626414656639099, 0.01673581264913082, 1.2850837707519531),
                 (-0.6608743071556091, 0.026440564543008804, 1.281723141670227),
                 (-0.6626222133636475, 0.05646082013845444, 1.2813090085983276),
                 (-0.6656275391578674, 0.07226301729679108, 1.2813259363174438),
                 (-0.6740082502365112, 0.0800352692604065, 1.2894243001937866),
                 (-0.7213388681411743, 0.053230732679367065, 1.2380902767181396),
                 (-0.7189789414405823, 0.012175485491752625, 1.2400267124176025),
                 (-0.7196219563484192, 0.0009085634956136346, 1.2442350387573242),
                 (-0.7258826494216919, 0.003781082108616829, 1.2540887594223022),
                 (-0.7300921678543091, 0.029629603028297424, 1.2560874223709106),
                 (-0.7034462094306946, 0.03392000496387482, 1.278279423713684),
                 (-0.6931492686271667, 0.05459713190793991, 1.2597678899765015),
                 (-0.7010021209716797, 0.08185900747776031, 1.2687760591506958),
                 (-0.6901781558990479, 0.0194605253636837, 1.26127290725708),
                 (-0.691379189491272, 0.00897569302469492, 1.2650595903396606),
                 (-0.699248731136322, 0.011261673644185066, 1.2763752937316895),
                 (-0.706007182598114, 0.07313397526741028, 1.275978684425354),
                 (-0.695531964302063, 0.07116305828094482, 1.261614441871643),
                 (-0.7167691588401794, 0.03177480399608612, 1.267183542251587),
                 (-0.7064022421836853, 0.05421724170446396, 1.2482802867889404),
                 (-0.7144989967346191, 0.08277087658643723, 1.2584519386291504),
                 (-0.7043319344520569, 0.01604587212204933, 1.2504723072052002),
                 (-0.705500602722168, 0.00494212843477726, 1.2546472549438477),
                 (-0.7125656604766846, 0.007521377876400948, 1.2652320861816406),
                 (-0.719408392906189, 0.07417312264442444, 1.2652963399887085),
                 (-0.7092925310134888, 0.07097531110048294, 1.2518993616104126),
                 (-0.6926059126853943, 0.07209481298923492, 1.28666090965271),
                 (-0.6801857352256775, 0.07179831713438034, 1.27084219455719),
                 (-0.6901232004165649, 0.03606521338224411, 1.2893754243850708),
                 (-0.6772818565368652, 0.055980902165174484, 1.270603895187378),
                 (-0.6875051856040955, 0.0809471383690834, 1.2791001796722412),
                 (-0.6727683544158936, 0.02355942130088806, 1.2714101076126099),
                 (-0.6742353439331055, 0.013386741280555725, 1.2749955654144287),
                 (-0.6859318017959595, 0.015001969411969185, 1.2875185012817383),
                 (-0.6783395409584045, 0.05357034131884575, 1.2996091842651367),
                 (-0.7321269512176514, 0.052215076982975006, 1.2560385465621948),
                 (-0.7052332758903503, 0.05289270728826523, 1.2778239250183105),
                 (-0.7186800837516785, 0.05255388468503952, 1.266931414604187),
                 (-0.6917864084243774, 0.05323152616620064, 1.288716435432434),
                 (-0.6617482900619507, 0.04145069420337677, 1.2815160751342773),
                 (-0.7201589345932007, 0.032703109085559845, 1.239058494567871),
                 (-0.6916637420654297, 0.037028826773166656, 1.2605204582214355),
                 (-0.7053670883178711, 0.035131558775901794, 1.2493762969970703),
                 (-0.6750251054763794, 0.03977016359567642, 1.2710070610046387),
                 (0.7765583992004395, 0.0791737511754036, 1.1880125999450684),
                 (0.7675548195838928, 0.07714816182851791, 1.201215386390686),
                 (0.7760236859321594, 0.08542810380458832, 1.1880265474319458),
                 (0.7667182683944702, 0.08562348783016205, 1.2012321949005127),
                 (0.7818592190742493, 0.0796118676662445, 1.1913701295852661),
                 (0.7747247219085693, 0.07786180078983307, 1.2057455778121948),
                 (0.7813183665275574, 0.0858861654996872, 1.1913813352584839),
                 (0.7738821506500244, 0.08631614595651627, 1.2057573795318604),
                 (0.7524637579917908, -0.008186698891222477, 1.2113710641860962),
                 (0.7240662574768066, 0.00041991635225713253, 1.2394449710845947),
                 (0.7558944821357727, 0.0024993503466248512, 1.2114335298538208),
                 (0.7278800010681152, 0.012582186609506607, 1.2396659851074219),
                 (0.7599826455116272, -0.010648000985383987, 1.2193129062652588),
                 (0.7322576642036438, -0.002272685756906867, 1.248822808265686),
                 (0.7634192705154419, 2.309589763171971e-05, 1.2193857431411743),
                 (0.7360294461250305, 0.009846665896475315, 1.2490170001983643),
                 (0.7584221363067627, 0.019306503236293793, 1.2086340188980103),
                 (0.7304341793060303, 0.023423468694090843, 1.2389024496078491),
                 (0.7606858611106873, 0.030349720269441605, 1.2087247371673584),
                 (0.7326527237892151, 0.03652098774909973, 1.2392908334732056),
                 (0.7662588953971863, 0.01759788580238819, 1.2166252136230469),
                 (0.7392706274986267, 0.021745095029473305, 1.248605489730835),
                 (0.7685295343399048, 0.028728170320391655, 1.2167080640792847),
                 (0.741416335105896, 0.03468954935669899, 1.2489547729492188),
                 (0.7605230212211609, 0.04573626443743706, 1.2114115953445435),
                 (0.7328155636787415, 0.04630856215953827, 1.240653157234192),
                 (0.7610251307487488, 0.055556267499923706, 1.2116031646728516),
                 (0.7332699298858643, 0.05770338326692581, 1.2409240007400513),
                 (0.7674212455749512, 0.04522937536239624, 1.2184163331985474),
                 (0.7404937148094177, 0.04583354294300079, 1.2490482330322266),
                 (0.7679300308227539, 0.05507594347000122, 1.2186130285263062),
                 (0.7409350872039795, 0.05717874690890312, 1.2493094205856323),
                 (0.7516888976097107, 0.0749310776591301, 1.2199395895004272),
                 (0.7337750196456909, 0.0718999058008194, 1.238265872001648),
                 (0.750482976436615, 0.0836108848452568, 1.2200084924697876),
                 (0.7324249744415283, 0.08225111663341522, 1.238305687904358),
                 (0.7580379247665405, 0.07575322687625885, 1.225899577140808),
                 (0.7408846616744995, 0.07286235690116882, 1.2457765340805054),
                 (0.7568544745445251, 0.08443083614110947, 1.2259891033172607),
                 (0.7395372986793518, 0.0830993801355362, 1.2458059787750244),
                 (0.7664834260940552, 0.07739850133657455, 1.2023252248764038),
                 (0.7538918852806091, 0.07503394782543182, 1.2178112268447876),
                 (0.7658600807189941, 0.08516940474510193, 1.2023539543151855),
                 (0.7527731657028198, 0.08420957624912262, 1.217806339263916),
                 (0.7726864218711853, 0.07785467058420181, 1.2073627710342407),
                 (0.7605220079421997, 0.0759260356426239, 1.2240726947784424),
                 (0.7720171809196472, 0.08575329929590225, 1.207366943359375),
                 (0.7594183087348938, 0.08494672179222107, 1.2240649461746216),
                 (0.7789627313613892, 0.04536731168627739, 1.185149908065796),
                 (0.7612695097923279, 0.04495391249656677, 1.2088065147399902),
                 (0.7794740200042725, 0.05410607159137726, 1.1851541996002197),
                 (0.7618997097015381, 0.0563444122672081, 1.2087987661361694),
                 (0.7860293388366699, 0.0449516661465168, 1.190295934677124),
                 (0.7702931761741638, 0.044902119785547256, 1.215755820274353),
                 (0.7865394353866577, 0.05369138717651367, 1.190299391746521),
                 (0.7708755731582642, 0.05540879815816879, 1.2157493829727173),
                 (0.7693002223968506, -0.01282443106174469, 1.1901898384094238),
                 (0.7539846897125244, -0.00882954802364111, 1.2093818187713623),
                 (0.7726430296897888, -0.0034918480087071657, 1.190057635307312),
                 (0.7575440406799316, 0.002423664089292288, 1.209441065788269),
                 (0.7766596674919128, -0.015362633392214775, 1.1963801383972168),
                 (0.7626950144767761, -0.011588004417717457, 1.2168314456939697),
                 (0.7799797058105469, -0.005998070817440748, 1.1962236166000366),
                 (0.7662233710289001, -0.0003753747441805899, 1.2168779373168945),
                 (0.7780223488807678, 0.015294978395104408, 1.182474136352539),
                 (0.7594404220581055, 0.01825525611639023, 1.2059601545333862),
                 (0.7802485227584839, 0.026370292529463768, 1.1825225353240967),
                 (0.762024462223053, 0.03077901527285576, 1.2060190439224243),
                 (0.7870286107063293, 0.013482579030096531, 1.1889969110488892),
                 (0.7692529559135437, 0.016209810972213745, 1.2138721942901611),
                 (0.7892465591430664, 0.024503493681550026, 1.18904709815979),
                 (0.7718314528465271, 0.028700383380055428, 1.213931918144226),
                 (0.7908729910850525, 0.04616289958357811, 1.1679250001907349),
                 (0.7800155878067017, 0.044986020773649216, 1.1831344366073608),
                 (0.7910981178283691, 0.05165320262312889, 1.1680753231048584),
                 (0.7805373072624207, 0.05415778234601021, 1.1831107139587402),
                 (0.7953536510467529, 0.04585990682244301, 1.171095371246338),
                 (0.7879660725593567, 0.04489470273256302, 1.1877373456954956),
                 (0.7956013083457947, 0.05138362571597099, 1.1712567806243896),
                 (0.7884408235549927, 0.053380995988845825, 1.1877105236053467),
                 (0.7934960722923279, 0.014291126281023026, 1.1629016399383545),
                 (0.7790781259536743, 0.015223599039018154, 1.1807812452316284),
                 (0.7948903441429138, 0.0211175587028265, 1.1630007028579712),
                 (0.7814610600471497, 0.02639167569577694, 1.1808918714523315),
                 (0.7991330623626709, 0.013049842789769173, 1.166797161102295),
                 (0.7883270978927612, 0.01321849413216114, 1.1871662139892578),
                 (0.8005630373954773, 0.019896408542990685, 1.1669161319732666),
                 (0.7906798124313354, 0.024357475340366364, 1.1872620582580566),
                 (0.7847856879234314, -0.016638904809951782, 1.170188546180725),
                 (0.7700260877609253, -0.01374713983386755, 1.1880676746368408),
                 (0.7868736386299133, -0.010174987837672234, 1.1702452898025513),
                 (0.7734535336494446, -0.0034378403797745705, 1.187891960144043),
                 (0.7900707721710205, -0.01839287392795086, 1.1740450859069824),
                 (0.7784774899482727, -0.016451239585876465, 1.1943227052688599),
                 (0.7921814918518066, -0.011944049037992954, 1.174120306968689),
                 (0.7819101810455322, -0.006151870358735323, 1.194152593612671),
                 (0.6666309833526611, -0.014740764163434505, 1.2472559213638306),
                 (0.6470432281494141, 0.005024326033890247, 1.273386836051941),
                 (0.6691499948501587, -0.0028837472200393677, 1.2412952184677124),
                 (0.6499465703964233, 0.0166751891374588, 1.266991138458252),
                 (0.6793141961097717, -0.012887714430689812, 1.2565208673477173),
                 (0.6579126119613647, 0.006653084419667721, 1.2812429666519165),
                 (0.6819334030151367, -0.0009667365811765194, 1.2505924701690674),
                 (0.6608127355575562, 0.018260864540934563, 1.2748764753341675),
                 (0.6882055401802063, -0.024816788733005524, 1.2221485376358032),
                 (0.6692330837249756, -0.016459254547953606, 1.2451895475387573),
                 (0.68923419713974, -0.013086375780403614, 1.2187219858169556),
                 (0.6709346771240234, -0.002388861496001482, 1.2401838302612305),
                 (0.6980130672454834, -0.023487944155931473, 1.2295066118240356),
                 (0.6813198328018188, -0.014832893386483192, 1.253905177116394),
                 (0.6990792155265808, -0.011686894111335278, 1.2260788679122925),
                 (0.6830620765686035, -0.0007844883948564529, 1.2489397525787354),
                 (0.7044439315795898, -0.02744598686695099, 1.2026088237762451),
                 (0.6892926096916199, -0.02576461434364319, 1.2183020114898682),
                 (0.704554557800293, -0.019262954592704773, 1.201035499572754),
                 (0.6899106502532959, -0.013689987361431122, 1.2156294584274292),
                 (0.7124006152153015, -0.02641206607222557, 1.208885908126831),
                 (0.7021068334579468, -0.024344749748706818, 1.2277296781539917),
                 (0.7125563621520996, -0.01815316639840603, 1.2073310613632202),
                 (0.7027257680892944, -0.012256846763193607, 1.225054383277893),
                 (-0.7765583992004395, 0.0791737511754036, 1.1880125999450684),
                 (-0.7675548195838928, 0.07714816182851791, 1.201215386390686),
                 (-0.7760236859321594, 0.08542810380458832, 1.1880265474319458),
                 (-0.7667182683944702, 0.08562348783016205, 1.2012321949005127),
                 (-0.7818592190742493, 0.0796118676662445, 1.1913701295852661),
                 (-0.7747247219085693, 0.07786180078983307, 1.2057455778121948),
                 (-0.7813183665275574, 0.0858861654996872, 1.1913813352584839),
                 (-0.7738821506500244, 0.08631614595651627, 1.2057573795318604),
                 (-0.7524637579917908, -0.008186698891222477, 1.2113710641860962),
                 (-0.7240662574768066, 0.00041991635225713253, 1.2394449710845947),
                 (-0.7558944821357727, 0.0024993503466248512, 1.2114335298538208),
                 (-0.7278800010681152, 0.012582186609506607, 1.2396659851074219),
                 (-0.7599826455116272, -0.010648000985383987, 1.2193129062652588),
                 (-0.7322576642036438, -0.002272685756906867, 1.248822808265686),
                 (-0.7634192705154419, 2.309589763171971e-05, 1.2193857431411743),
                 (-0.7360294461250305, 0.009846665896475315, 1.2490170001983643),
                 (-0.7584221363067627, 0.019306503236293793, 1.2086340188980103),
                 (-0.7304341793060303, 0.023423468694090843, 1.2389024496078491),
                 (-0.7606858611106873, 0.030349720269441605, 1.2087247371673584),
                 (-0.7326527237892151, 0.03652098774909973, 1.2392908334732056),
                 (-0.7662588953971863, 0.01759788580238819, 1.2166252136230469),
                 (-0.7392706274986267, 0.021745095029473305, 1.248605489730835),
                 (-0.7685295343399048, 0.028728170320391655, 1.2167080640792847),
                 (-0.741416335105896, 0.03468954935669899, 1.2489547729492188),
                 (-0.7605230212211609, 0.04573626443743706, 1.2114115953445435),
                 (-0.7328155636787415, 0.04630856215953827, 1.240653157234192),
                 (-0.7610251307487488, 0.055556267499923706, 1.2116031646728516),
                 (-0.7332699298858643, 0.05770338326692581, 1.2409240007400513),
                 (-0.7674212455749512, 0.04522937536239624, 1.2184163331985474),
                 (-0.7404937148094177, 0.04583354294300079, 1.2490482330322266),
                 (-0.7679300308227539, 0.05507594347000122, 1.2186130285263062),
                 (-0.7409350872039795, 0.05717874690890312, 1.2493094205856323),
                 (-0.7516888976097107, 0.0749310776591301, 1.2199395895004272),
                 (-0.7337750196456909, 0.0718999058008194, 1.238265872001648),
                 (-0.750482976436615, 0.0836108848452568, 1.2200084924697876),
                 (-0.7324249744415283, 0.08225111663341522, 1.238305687904358),
                 (-0.7580379247665405, 0.07575322687625885, 1.225899577140808),
                 (-0.7408846616744995, 0.07286235690116882, 1.2457765340805054),
                 (-0.7568544745445251, 0.08443083614110947, 1.2259891033172607),
                 (-0.7395372986793518, 0.0830993801355362, 1.2458059787750244),
                 (-0.7664834260940552, 0.07739850133657455, 1.2023252248764038),
                 (-0.7538918852806091, 0.07503394782543182, 1.2178112268447876),
                 (-0.7658600807189941, 0.08516940474510193, 1.2023539543151855),
                 (-0.7527731657028198, 0.08420957624912262, 1.217806339263916),
                 (-0.7726864218711853, 0.07785467058420181, 1.2073627710342407),
                 (-0.7605220079421997, 0.0759260356426239, 1.2240726947784424),
                 (-0.7720171809196472, 0.08575329929590225, 1.207366943359375),
                 (-0.7594183087348938, 0.08494672179222107, 1.2240649461746216),
                 (-0.7789627313613892, 0.04536731168627739, 1.185149908065796),
                 (-0.7612695097923279, 0.04495391249656677, 1.2088065147399902),
                 (-0.7794740200042725, 0.05410607159137726, 1.1851541996002197),
                 (-0.7618997097015381, 0.0563444122672081, 1.2087987661361694),
                 (-0.7860293388366699, 0.0449516661465168, 1.190295934677124),
                 (-0.7702931761741638, 0.044902119785547256, 1.215755820274353),
                 (-0.7865394353866577, 0.05369138717651367, 1.190299391746521),
                 (-0.7708755731582642, 0.05540879815816879, 1.2157493829727173),
                 (-0.7693002223968506, -0.01282443106174469, 1.1901898384094238),
                 (-0.7539846897125244, -0.00882954802364111, 1.2093818187713623),
                 (-0.7726430296897888, -0.0034918480087071657, 1.190057635307312),
                 (-0.7575440406799316, 0.002423664089292288, 1.209441065788269),
                 (-0.7766596674919128, -0.015362633392214775, 1.1963801383972168),
                 (-0.7626950144767761, -0.011588004417717457, 1.2168314456939697),
                 (-0.7799797058105469, -0.005998070817440748, 1.1962236166000366),
                 (-0.7662233710289001, -0.0003753747441805899, 1.2168779373168945),
                 (-0.7780223488807678, 0.015294978395104408, 1.182474136352539),
                 (-0.7594404220581055, 0.01825525611639023, 1.2059601545333862),
                 (-0.7802485227584839, 0.026370292529463768, 1.1825225353240967),
                 (-0.762024462223053, 0.03077901527285576, 1.2060190439224243),
                 (-0.7870286107063293, 0.013482579030096531, 1.1889969110488892),
                 (-0.7692529559135437, 0.016209810972213745, 1.2138721942901611),
                 (-0.7892465591430664, 0.024503493681550026, 1.18904709815979),
                 (-0.7718314528465271, 0.028700383380055428, 1.213931918144226),
                 (-0.7908729910850525, 0.04616289958357811, 1.1679250001907349),
                 (-0.7800155878067017, 0.044986020773649216, 1.1831344366073608),
                 (-0.7910981178283691, 0.05165320262312889, 1.1680753231048584),
                 (-0.7805373072624207, 0.05415778234601021, 1.1831107139587402),
                 (-0.7953536510467529, 0.04585990682244301, 1.171095371246338),
                 (-0.7879660725593567, 0.04489470273256302, 1.1877373456954956),
                 (-0.7956013083457947, 0.05138362571597099, 1.1712567806243896),
                 (-0.7884408235549927, 0.053380995988845825, 1.1877105236053467),
                 (-0.7934960722923279, 0.014291126281023026, 1.1629016399383545),
                 (-0.7790781259536743, 0.015223599039018154, 1.1807812452316284),
                 (-0.7948903441429138, 0.0211175587028265, 1.1630007028579712),
                 (-0.7814610600471497, 0.02639167569577694, 1.1808918714523315),
                 (-0.7991330623626709, 0.013049842789769173, 1.166797161102295),
                 (-0.7883270978927612, 0.01321849413216114, 1.1871662139892578),
                 (-0.8005630373954773, 0.019896408542990685, 1.1669161319732666),
                 (-0.7906798124313354, 0.024357475340366364, 1.1872620582580566),
                 (-0.7847856879234314, -0.016638904809951782, 1.170188546180725),
                 (-0.7700260877609253, -0.01374713983386755, 1.1880676746368408),
                 (-0.7868736386299133, -0.010174987837672234, 1.1702452898025513),
                 (-0.7734535336494446, -0.0034378403797745705, 1.187891960144043),
                 (-0.7900707721710205, -0.01839287392795086, 1.1740450859069824),
                 (-0.7784774899482727, -0.016451239585876465, 1.1943227052688599),
                 (-0.7921814918518066, -0.011944049037992954, 1.174120306968689),
                 (-0.7819101810455322, -0.006151870358735323, 1.194152593612671),
                 (-0.6666309833526611, -0.014740764163434505, 1.2472559213638306),
                 (-0.6470432281494141, 0.005024326033890247, 1.273386836051941),
                 (-0.6691499948501587, -0.0028837472200393677, 1.2412952184677124),
                 (-0.6499465703964233, 0.0166751891374588, 1.266991138458252),
                 (-0.6793141961097717, -0.012887714430689812, 1.2565208673477173),
                 (-0.6579126119613647, 0.006653084419667721, 1.2812429666519165),
                 (-0.6819334030151367, -0.0009667365811765194, 1.2505924701690674),
                 (-0.6608127355575562, 0.018260864540934563, 1.2748764753341675),
                 (-0.6882055401802063, -0.024816788733005524, 1.2221485376358032),
                 (-0.6692330837249756, -0.016459254547953606, 1.2451895475387573),
                 (-0.68923419713974, -0.013086375780403614, 1.2187219858169556),
                 (-0.6709346771240234, -0.002388861496001482, 1.2401838302612305),
                 (-0.6980130672454834, -0.023487944155931473, 1.2295066118240356),
                 (-0.6813198328018188, -0.014832893386483192, 1.253905177116394),
                 (-0.6990792155265808, -0.011686894111335278, 1.2260788679122925),
                 (-0.6830620765686035, -0.0007844883948564529, 1.2489397525787354),
                 (-0.7044439315795898, -0.02744598686695099, 1.2026088237762451),
                 (-0.6892926096916199, -0.02576461434364319, 1.2183020114898682),
                 (-0.704554557800293, -0.019262954592704773, 1.201035499572754),
                 (-0.6899106502532959, -0.013689987361431122, 1.2156294584274292),
                 (-0.7124006152153015, -0.02641206607222557, 1.208885908126831),
                 (-0.7021068334579468, -0.024344749748706818, 1.2277296781539917),
                 (-0.7125563621520996, -0.01815316639840603, 1.2073310613632202),
                 (-0.7027257680892944, -0.012256846763193607, 1.225054383277893))

        faces = ((37, 36, 3, 15),
                 (38, 20, 11, 33),
                 (39, 21, 7, 35),
                 (29, 24, 6, 15),
                 (31, 22, 9, 27),
                 (30, 26, 10, 19),
                 (26, 27, 9, 10),
                 (35, 32, 0, 1),
                 (28, 29, 15, 3),
                 (34, 37, 15, 6),
                 (25, 30, 19, 14),
                 (32, 2, 20, 38),
                 (24, 8, 22, 31),
                 (34, 6, 21, 39),
                 (6, 24, 31, 21),
                 (11, 20, 30, 25),
                 (13, 16, 29, 28),
                 (2, 7, 27, 26),
                 (20, 2, 26, 30),
                 (21, 31, 27, 7),
                 (16, 8, 24, 29),
                 (5, 34, 39, 23),
                 (0, 32, 38, 18),
                 (5, 17, 37, 34),
                 (7, 2, 32, 35),
                 (23, 39, 35, 1),
                 (18, 38, 33, 12),
                 (17, 4, 36, 37),
                 (67, 49, 3, 36),
                 (68, 33, 11, 54),
                 (69, 66, 45, 55),
                 (61, 49, 44, 58),
                 (63, 60, 47, 56),
                 (62, 53, 48, 59),
                 (59, 48, 47, 60),
                 (66, 41, 40, 64),
                 (28, 3, 49, 61),
                 (65, 44, 49, 67),
                 (25, 14, 53, 62),
                 (64, 68, 54, 42),
                 (58, 63, 56, 46),
                 (65, 69, 55, 44),
                 (44, 55, 63, 58),
                 (11, 25, 62, 54),
                 (13, 28, 61, 50),
                 (42, 59, 60, 45),
                 (54, 62, 59, 42),
                 (55, 45, 60, 63),
                 (50, 61, 58, 46),
                 (43, 57, 69, 65),
                 (40, 52, 68, 64),
                 (43, 65, 67, 51),
                 (45, 66, 64, 42),
                 (57, 41, 66, 69),
                 (52, 12, 33, 68),
                 (51, 67, 36, 4),
                 (99, 100, 74, 72),
                 (103, 102, 82, 85),
                 (98, 99, 72, 70),
                 (104, 98, 70, 88),
                 (96, 87, 79, 93),
                 (93, 92, 73, 75),
                 (92, 91, 71, 73),
                 (97, 89, 71, 91),
                 (95, 84, 87, 96),
                 (100, 103, 85, 74),
                 (94, 81, 89, 97),
                 (101, 104, 88, 80),
                 (76, 94, 97, 90),
                 (83, 95, 96, 86),
                 (90, 97, 91, 77),
                 (78, 77, 91, 92),
                 (79, 78, 92, 93),
                 (86, 96, 93, 75),
                 (76, 90, 104, 101),
                 (79, 87, 103, 100),
                 (90, 77, 98, 104),
                 (77, 78, 99, 98),
                 (87, 84, 102, 103),
                 (78, 79, 100, 99),
                 (126, 107, 109, 127),
                 (128, 114, 82, 102),
                 (125, 105, 107, 126),
                 (129, 117, 105, 125),
                 (123, 122, 113, 116),
                 (122, 110, 108, 121),
                 (121, 108, 106, 120),
                 (124, 120, 106, 118),
                 (95, 123, 116, 84),
                 (127, 109, 114, 128),
                 (94, 124, 118, 81),
                 (101, 80, 117, 129),
                 (76, 119, 124, 94),
                 (83, 115, 123, 95),
                 (119, 111, 120, 124),
                 (112, 121, 120, 111),
                 (113, 122, 121, 112),
                 (115, 110, 122, 123),
                 (76, 101, 129, 119),
                 (113, 127, 128, 116),
                 (119, 129, 125, 111),
                 (111, 125, 126, 112),
                 (116, 128, 102, 84),
                 (112, 126, 127, 113),
                 (141, 134, 133, 140),
                 (140, 133, 139, 144),
                 (143, 135, 136, 142),
                 (142, 141, 137, 130),
                 (136, 134, 141, 142),
                 (138, 143, 142, 130),
                 (132, 140, 144, 131),
                 (137, 141, 140, 132),
                 (152, 151, 147, 148),
                 (151, 144, 139, 147),
                 (143, 153, 149, 135),
                 (153, 145, 150, 152),
                 (149, 153, 152, 148),
                 (138, 145, 153, 143),
                 (146, 131, 144, 151),
                 (150, 146, 151, 152),
                 (165, 158, 157, 164),
                 (164, 157, 163, 168),
                 (167, 159, 160, 166),
                 (166, 165, 161, 154),
                 (160, 158, 165, 166),
                 (162, 167, 166, 154),
                 (156, 164, 168, 155),
                 (161, 165, 164, 156),
                 (176, 175, 171, 172),
                 (175, 168, 163, 171),
                 (167, 177, 173, 159),
                 (177, 169, 174, 176),
                 (173, 177, 176, 172),
                 (162, 169, 177, 167),
                 (170, 155, 168, 175),
                 (174, 170, 175, 176),
                 (188, 190, 183, 182),
                 (189, 184, 183, 190),
                 (188, 182, 185, 192),
                 (191, 187, 184, 189),
                 (178, 191, 189, 179),
                 (181, 188, 192, 180),
                 (179, 189, 190, 186),
                 (181, 186, 190, 188),
                 (199, 195, 196, 201),
                 (200, 201, 196, 197),
                 (199, 192, 185, 195),
                 (191, 200, 197, 187),
                 (178, 193, 200, 191),
                 (194, 180, 192, 199),
                 (193, 198, 201, 200),
                 (194, 199, 201, 198),
                 (244, 222, 207, 239),
                 (229, 215, 209, 227),
                 (221, 217, 206, 219),
                 (251, 246, 213, 228),
                 (250, 247, 212, 224),
                 (249, 248, 211, 220),
                 (243, 242, 217, 221),
                 (245, 240, 215, 229),
                 (223, 225, 214, 208),
                 (239, 243, 221, 214),
                 (247, 249, 220, 212),
                 (214, 221, 219, 208),
                 (209, 215, 225, 223),
                 (246, 250, 224, 213),
                 (240, 204, 222, 244),
                 (241, 245, 229, 216),
                 (252, 251, 228, 210),
                 (216, 229, 227, 205),
                 (205, 227, 236, 231),
                 (209, 223, 235, 230),
                 (208, 219, 234, 232),
                 (219, 206, 233, 234),
                 (223, 208, 232, 235),
                 (227, 209, 230, 236),
                 (238, 218, 207, 222),
                 (237, 202, 218, 238),
                 (203, 237, 238, 226),
                 (226, 238, 222, 204),
                 (203, 226, 245, 241),
                 (215, 240, 244, 225),
                 (207, 218, 243, 239),
                 (226, 204, 240, 245),
                 (218, 202, 242, 243),
                 (225, 244, 239, 214),
                 (231, 236, 251, 252),
                 (230, 235, 250, 246),
                 (232, 234, 249, 247),
                 (234, 233, 248, 249),
                 (235, 232, 247, 250),
                 (236, 230, 246, 251),
                 (282, 279, 254, 265),
                 (272, 270, 256, 260),
                 (264, 262, 206, 217),
                 (288, 271, 258, 284),
                 (287, 267, 257, 285),
                 (286, 263, 211, 248),
                 (281, 264, 217, 242),
                 (283, 272, 260, 280),
                 (266, 255, 259, 268),
                 (279, 259, 264, 281),
                 (285, 257, 263, 286),
                 (259, 255, 262, 264),
                 (256, 266, 268, 260),
                 (284, 258, 267, 287),
                 (280, 282, 265, 253),
                 (241, 216, 272, 283),
                 (252, 210, 271, 288),
                 (216, 205, 270, 272),
                 (205, 231, 277, 270),
                 (256, 273, 276, 266),
                 (255, 274, 275, 262),
                 (262, 275, 233, 206),
                 (266, 276, 274, 255),
                 (270, 277, 273, 256),
                 (278, 265, 254, 261),
                 (237, 278, 261, 202),
                 (203, 269, 278, 237),
                 (269, 253, 265, 278),
                 (203, 241, 283, 269),
                 (260, 268, 282, 280),
                 (254, 279, 281, 261),
                 (269, 283, 280, 253),
                 (261, 281, 242, 202),
                 (268, 259, 279, 282),
                 (231, 252, 288, 277),
                 (273, 284, 287, 276),
                 (274, 285, 286, 275),
                 (275, 286, 248, 233),
                 (276, 287, 285, 274),
                 (277, 288, 284, 273),
                 (310, 298, 297, 313),
                 (306, 295, 293, 303),
                 (310, 316, 294, 298),
                 (316, 303, 293, 294),
                 (313, 297, 296, 309),
                 (306, 309, 296, 295),
                 (341, 342, 307, 304),
                 (304, 307, 308, 305),
                 (305, 308, 309, 306),
                 (338, 315, 307, 342),
                 (315, 314, 308, 307),
                 (314, 313, 309, 308),
                 (339, 340, 301, 318),
                 (318, 301, 302, 317),
                 (317, 302, 303, 316),
                 (337, 339, 318, 312),
                 (312, 318, 317, 311),
                 (311, 317, 316, 310),
                 (341, 304, 301, 340),
                 (304, 305, 302, 301),
                 (305, 306, 303, 302),
                 (337, 312, 315, 338),
                 (312, 311, 314, 315),
                 (311, 310, 313, 314),
                 (331, 332, 320, 324),
                 (333, 331, 324, 323),
                 (332, 334, 319, 320),
                 (335, 336, 322, 321),
                 (336, 333, 323, 322),
                 (334, 335, 321, 319),
                 (343, 344, 330, 329),
                 (345, 346, 328, 327),
                 (347, 348, 325, 326),
                 (346, 343, 329, 328),
                 (344, 347, 326, 330),
                 (348, 345, 327, 325),
                 (325, 327, 328, 329, 330, 326),
                 (293, 295, 335, 334),
                 (296, 297, 333, 336),
                 (295, 296, 336, 335),
                 (294, 293, 334, 332),
                 (297, 298, 331, 333),
                 (298, 294, 332, 331),
                 (289, 337, 338, 300),
                 (292, 341, 340, 291),
                 (289, 290, 339, 337),
                 (290, 291, 340, 339),
                 (300, 338, 342, 299),
                 (292, 299, 342, 341),
                 (319, 321, 345, 348),
                 (324, 320, 347, 344),
                 (322, 323, 343, 346),
                 (320, 319, 348, 347),
                 (321, 322, 346, 345),
                 (323, 324, 344, 343),
                 (370, 373, 357, 358),
                 (366, 363, 353, 355),
                 (370, 358, 354, 376),
                 (376, 354, 353, 363),
                 (373, 369, 356, 357),
                 (366, 355, 356, 369),
                 (401, 364, 367, 402),
                 (364, 365, 368, 367),
                 (365, 366, 369, 368),
                 (398, 402, 367, 375),
                 (375, 367, 368, 374),
                 (374, 368, 369, 373),
                 (399, 378, 361, 400),
                 (378, 377, 362, 361),
                 (377, 376, 363, 362),
                 (397, 372, 378, 399),
                 (372, 371, 377, 378),
                 (371, 370, 376, 377),
                 (401, 400, 361, 364),
                 (364, 361, 362, 365),
                 (365, 362, 363, 366),
                 (397, 398, 375, 372),
                 (372, 375, 374, 371),
                 (371, 374, 373, 370),
                 (391, 384, 380, 392),
                 (393, 383, 384, 391),
                 (392, 380, 379, 394),
                 (395, 381, 382, 396),
                 (396, 382, 383, 393),
                 (394, 379, 381, 395),
                 (403, 389, 390, 404),
                 (405, 387, 388, 406),
                 (407, 386, 385, 408),
                 (406, 388, 389, 403),
                 (404, 390, 386, 407),
                 (408, 385, 387, 405),
                 (385, 386, 390, 389, 388, 387),
                 (353, 394, 395, 355),
                 (356, 396, 393, 357),
                 (355, 395, 396, 356),
                 (354, 392, 394, 353),
                 (357, 393, 391, 358),
                 (358, 391, 392, 354),
                 (349, 360, 398, 397),
                 (352, 351, 400, 401),
                 (349, 397, 399, 350),
                 (350, 399, 400, 351),
                 (360, 359, 402, 398),
                 (352, 401, 402, 359),
                 (379, 408, 405, 381),
                 (384, 404, 407, 380),
                 (382, 406, 403, 383),
                 (380, 407, 408, 379),
                 (381, 405, 406, 382),
                 (383, 403, 404, 384),
                 (455, 439, 415, 451),
                 (457, 460, 410, 409),
                 (453, 418, 417, 452),
                 (462, 459, 416, 435),
                 (464, 458, 411, 444),
                 (456, 453, 425, 446),
                 (446, 425, 426, 447),
                 (447, 426, 427, 448),
                 (454, 449, 424, 436),
                 (436, 424, 423, 437),
                 (437, 423, 422, 438),
                 (458, 427, 421, 457),
                 (427, 426, 420, 421),
                 (426, 425, 419, 420),
                 (452, 450, 430, 419),
                 (419, 430, 429, 420),
                 (420, 429, 428, 421),
                 (463, 441, 431, 461),
                 (441, 442, 432, 431),
                 (442, 443, 433, 432),
                 (429, 437, 438, 428),
                 (430, 436, 437, 429),
                 (450, 454, 436, 430),
                 (460, 462, 435, 410),
                 (423, 424, 443, 442),
                 (422, 423, 442, 441),
                 (459, 422, 441, 463),
                 (449, 414, 439, 455),
                 (432, 447, 448, 431),
                 (433, 446, 447, 432),
                 (451, 456, 446, 433),
                 (461, 464, 444, 412),
                 (415, 445, 456, 451),
                 (424, 449, 455, 443),
                 (413, 434, 454, 450),
                 (417, 413, 450, 452),
                 (434, 414, 449, 454),
                 (445, 418, 453, 456),
                 (425, 453, 452, 419),
                 (443, 455, 451, 433),
                 (431, 448, 464, 461),
                 (416, 459, 463, 440),
                 (428, 438, 462, 460),
                 (440, 463, 461, 412),
                 (411, 458, 457, 409),
                 (448, 427, 458, 464),
                 (438, 422, 459, 462),
                 (421, 428, 460, 457),
                 (511, 507, 471, 495),
                 (513, 465, 466, 516),
                 (509, 508, 473, 474),
                 (518, 491, 472, 515),
                 (520, 500, 467, 514),
                 (512, 502, 481, 509),
                 (502, 503, 482, 481),
                 (503, 504, 483, 482),
                 (510, 492, 480, 505),
                 (492, 493, 479, 480),
                 (493, 494, 478, 479),
                 (514, 513, 477, 483),
                 (483, 477, 476, 482),
                 (482, 476, 475, 481),
                 (508, 475, 486, 506),
                 (475, 476, 485, 486),
                 (476, 477, 484, 485),
                 (519, 517, 487, 497),
                 (497, 487, 488, 498),
                 (498, 488, 489, 499),
                 (485, 484, 494, 493),
                 (486, 485, 493, 492),
                 (506, 486, 492, 510),
                 (516, 466, 491, 518),
                 (479, 498, 499, 480),
                 (478, 497, 498, 479),
                 (515, 519, 497, 478),
                 (505, 511, 495, 470),
                 (488, 487, 504, 503),
                 (489, 488, 503, 502),
                 (507, 489, 502, 512),
                 (517, 468, 500, 520),
                 (471, 507, 512, 501),
                 (480, 499, 511, 505),
                 (469, 506, 510, 490),
                 (473, 508, 506, 469),
                 (490, 510, 505, 470),
                 (501, 512, 509, 474),
                 (481, 475, 508, 509),
                 (499, 489, 507, 511),
                 (487, 517, 520, 504),
                 (472, 496, 519, 515),
                 (484, 516, 518, 494),
                 (496, 468, 517, 519),
                 (467, 465, 513, 514),
                 (504, 520, 514, 483),
                 (494, 518, 515, 478),
                 (477, 513, 516, 484),
                 (555, 531, 532, 549),
                 (550, 527, 528, 539),
                 (560, 533, 527, 550),
                 (549, 532, 533, 560),
                 (576, 539, 528, 571),
                 (544, 529, 530, 565),
                 (565, 530, 531, 555),
                 (597, 569, 559, 595),
                 (569, 568, 558, 559),
                 (568, 567, 557, 558),
                 (567, 566, 556, 557),
                 (566, 565, 555, 556),
                 (599, 540, 569, 597),
                 (540, 541, 568, 569),
                 (541, 542, 567, 568),
                 (542, 543, 566, 567),
                 (543, 544, 565, 566),
                 (601, 598, 535, 572),
                 (572, 535, 536, 573),
                 (573, 536, 537, 574),
                 (574, 537, 538, 575),
                 (575, 538, 539, 576),
                 (600, 545, 564, 596),
                 (545, 546, 563, 564),
                 (546, 547, 562, 563),
                 (547, 548, 561, 562),
                 (548, 549, 560, 561),
                 (596, 564, 554, 594),
                 (564, 563, 553, 554),
                 (563, 562, 552, 553),
                 (562, 561, 551, 552),
                 (561, 560, 550, 551),
                 (594, 554, 535, 598),
                 (554, 553, 536, 535),
                 (553, 552, 537, 536),
                 (552, 551, 538, 537),
                 (551, 550, 539, 538),
                 (595, 559, 545, 600),
                 (559, 558, 546, 545),
                 (558, 557, 547, 546),
                 (557, 556, 548, 547),
                 (556, 555, 549, 548),
                 (543, 575, 576, 544),
                 (542, 574, 575, 543),
                 (541, 573, 574, 542),
                 (540, 572, 573, 541),
                 (599, 601, 572, 540),
                 (544, 576, 571, 529),
                 (587, 586, 583, 577),
                 (586, 588, 582, 583),
                 (590, 589, 579, 580),
                 (592, 591, 578, 584),
                 (591, 587, 577, 578),
                 (588, 593, 581, 582),
                 (593, 590, 580, 581),
                 (589, 592, 584, 579),
                 (585, 582, 581, 580),
                 (584, 585, 580, 579),
                 (578, 577, 585, 584),
                 (577, 583, 582, 585),
                 (529, 571, 592, 589),
                 (531, 530, 590, 593),
                 (532, 531, 593, 588),
                 (528, 527, 587, 591),
                 (571, 528, 591, 592),
                 (530, 529, 589, 590),
                 (533, 532, 588, 586),
                 (527, 533, 586, 587),
                 (523, 570, 601, 599),
                 (522, 595, 600, 534),
                 (525, 594, 598, 526),
                 (524, 596, 594, 525),
                 (534, 600, 596, 524),
                 (570, 526, 598, 601),
                 (523, 599, 597, 521),
                 (521, 597, 595, 522),
                 (636, 630, 613, 612),
                 (631, 620, 609, 608),
                 (641, 631, 608, 614),
                 (630, 641, 614, 613),
                 (657, 652, 609, 620),
                 (625, 646, 611, 610),
                 (646, 636, 612, 611),
                 (678, 676, 640, 650),
                 (650, 640, 639, 649),
                 (649, 639, 638, 648),
                 (648, 638, 637, 647),
                 (647, 637, 636, 646),
                 (680, 678, 650, 621),
                 (621, 650, 649, 622),
                 (622, 649, 648, 623),
                 (623, 648, 647, 624),
                 (624, 647, 646, 625),
                 (682, 653, 616, 679),
                 (653, 654, 617, 616),
                 (654, 655, 618, 617),
                 (655, 656, 619, 618),
                 (656, 657, 620, 619),
                 (681, 677, 645, 626),
                 (626, 645, 644, 627),
                 (627, 644, 643, 628),
                 (628, 643, 642, 629),
                 (629, 642, 641, 630),
                 (677, 675, 635, 645),
                 (645, 635, 634, 644),
                 (644, 634, 633, 643),
                 (643, 633, 632, 642),
                 (642, 632, 631, 641),
                 (675, 679, 616, 635),
                 (635, 616, 617, 634),
                 (634, 617, 618, 633),
                 (633, 618, 619, 632),
                 (632, 619, 620, 631),
                 (676, 681, 626, 640),
                 (640, 626, 627, 639),
                 (639, 627, 628, 638),
                 (638, 628, 629, 637),
                 (637, 629, 630, 636),
                 (624, 625, 657, 656),
                 (623, 624, 656, 655),
                 (622, 623, 655, 654),
                 (621, 622, 654, 653),
                 (680, 621, 653, 682),
                 (625, 610, 652, 657),
                 (668, 658, 664, 667),
                 (667, 664, 663, 669),
                 (671, 661, 660, 670),
                 (673, 665, 659, 672),
                 (672, 659, 658, 668),
                 (669, 663, 662, 674),
                 (674, 662, 661, 671),
                 (670, 660, 665, 673),
                 (666, 661, 662, 663),
                 (665, 660, 661, 666),
                 (659, 665, 666, 658),
                 (658, 666, 663, 664),
                 (610, 670, 673, 652),
                 (612, 674, 671, 611),
                 (613, 669, 674, 612),
                 (609, 672, 668, 608),
                 (652, 673, 672, 609),
                 (611, 671, 670, 610),
                 (614, 667, 669, 613),
                 (608, 668, 667, 614),
                 (604, 680, 682, 651),
                 (603, 615, 681, 676),
                 (606, 607, 679, 675),
                 (605, 606, 675, 677),
                 (615, 605, 677, 681),
                 (651, 682, 679, 607),
                 (604, 602, 678, 680),
                 (602, 603, 676, 678),
                 (711, 697, 699, 717),
                 (714, 700, 689, 728),
                 (723, 731, 690, 691),
                 (722, 698, 697, 711),
                 (729, 686, 703, 726),
                 (717, 699, 700, 714),
                 (723, 691, 698, 722),
                 (705, 693, 694, 709),
                 (709, 694, 695, 706),
                 (706, 695, 696, 710),
                 (710, 696, 701, 707),
                 (707, 701, 702, 708),
                 (708, 702, 692, 704),
                 (704, 692, 693, 705),
                 (690, 704, 705, 691),
                 (689, 708, 704, 690),
                 (700, 707, 708, 689),
                 (699, 710, 707, 700),
                 (697, 706, 710, 699),
                 (698, 709, 706, 697),
                 (691, 705, 709, 698),
                 (685, 725, 720, 683),
                 (725, 724, 721, 720),
                 (724, 723, 722, 721),
                 (687, 719, 716, 688),
                 (719, 718, 715, 716),
                 (718, 717, 714, 715),
                 (690, 731, 728, 689),
                 (731, 730, 727, 728),
                 (730, 729, 726, 727),
                 (683, 720, 713, 684),
                 (720, 721, 712, 713),
                 (721, 722, 711, 712),
                 (685, 686, 729, 725),
                 (725, 729, 730, 724),
                 (724, 730, 731, 723),
                 (688, 716, 726, 703),
                 (716, 715, 727, 726),
                 (715, 714, 728, 727),
                 (684, 713, 719, 687),
                 (713, 712, 718, 719),
                 (712, 711, 717, 718),
                 (760, 766, 748, 746),
                 (763, 777, 738, 749),
                 (772, 740, 739, 780),
                 (771, 760, 746, 747),
                 (778, 775, 752, 735),
                 (766, 763, 749, 748),
                 (772, 771, 747, 740),
                 (754, 758, 743, 742),
                 (758, 755, 744, 743),
                 (755, 759, 745, 744),
                 (759, 756, 750, 745),
                 (756, 757, 751, 750),
                 (757, 753, 741, 751),
                 (753, 754, 742, 741),
                 (739, 740, 754, 753),
                 (738, 739, 753, 757),
                 (749, 738, 757, 756),
                 (748, 749, 756, 759),
                 (746, 748, 759, 755),
                 (747, 746, 755, 758),
                 (740, 747, 758, 754),
                 (734, 732, 769, 774),
                 (774, 769, 770, 773),
                 (773, 770, 771, 772),
                 (736, 737, 765, 768),
                 (768, 765, 764, 767),
                 (767, 764, 763, 766),
                 (739, 738, 777, 780),
                 (780, 777, 776, 779),
                 (779, 776, 775, 778),
                 (732, 733, 762, 769),
                 (769, 762, 761, 770),
                 (770, 761, 760, 771),
                 (734, 774, 778, 735),
                 (774, 773, 779, 778),
                 (773, 772, 780, 779),
                 (737, 752, 775, 765),
                 (765, 775, 776, 764),
                 (764, 776, 777, 763),
                 (733, 736, 768, 762),
                 (762, 768, 767, 761),
                 (761, 767, 766, 760),
                 (813, 805, 783, 800),
                 (806, 785, 786, 809),
                 (809, 786, 790, 807),
                 (804, 784, 791, 802),
                 (804, 800, 783, 784),
                 (812, 802, 791, 808),
                 (793, 787, 788, 795),
                 (795, 788, 789, 797),
                 (801, 795, 797, 803),
                 (799, 793, 795, 801),
                 (807, 790, 796, 810),
                 (786, 785, 794, 798),
                 (786, 798, 796, 790),
                 (806, 811, 794, 785),
                 (781, 799, 801, 782),
                 (782, 801, 803, 792),
                 (810, 796, 802, 812),
                 (798, 794, 800, 804),
                 (798, 804, 802, 796),
                 (811, 813, 800, 794),
                 (793, 799, 813, 811),
                 (797, 810, 812, 803),
                 (787, 793, 811, 806),
                 (789, 807, 810, 797),
                 (803, 812, 808, 792),
                 (788, 809, 807, 789),
                 (787, 806, 809, 788),
                 (799, 781, 805, 813),
                 (846, 833, 816, 838),
                 (839, 842, 819, 818),
                 (842, 840, 823, 819),
                 (837, 835, 824, 817),
                 (837, 817, 816, 833),
                 (845, 841, 824, 835),
                 (826, 828, 821, 820),
                 (828, 830, 822, 821),
                 (834, 836, 830, 828),
                 (832, 834, 828, 826),
                 (840, 843, 829, 823),
                 (819, 831, 827, 818),
                 (819, 823, 829, 831),
                 (839, 818, 827, 844),
                 (814, 815, 834, 832),
                 (815, 825, 836, 834),
                 (843, 845, 835, 829),
                 (831, 837, 833, 827),
                 (831, 829, 835, 837),
                 (844, 827, 833, 846),
                 (826, 844, 846, 832),
                 (830, 836, 845, 843),
                 (820, 839, 844, 826),
                 (822, 830, 843, 840),
                 (836, 825, 841, 845),
                 (821, 822, 840, 842),
                 (820, 821, 842, 839),
                 (832, 846, 838, 814),
                 (848, 852, 853, 851),
                 (872, 875, 848, 847),
                 (851, 850, 847, 848),
                 (873, 853, 852, 876),
                 (860, 865, 864, 862),
                 (874, 855, 853, 873),
                 (854, 861, 857, 856),
                 (858, 860, 862, 859),
                 (869, 859, 862, 863),
                 (857, 861, 860, 858),
                 (861, 854, 868, 866),
                 (862, 864, 849, 863),
                 (866, 865, 860, 861),
                 (878, 869, 863, 877),
                 (864, 865, 867, 849),
                 (865, 866, 868, 867),
                 (875, 876, 852, 848),
                 (850, 851, 871, 870),
                 (877, 863, 849, 872),
                 (853, 855, 871, 851),
                 (850, 877, 872, 847),
                 (867, 868, 876, 875),
                 (870, 878, 877, 850),
                 (856, 874, 873, 854),
                 (854, 873, 876, 868),
                 (849, 867, 875, 872),
                 (880, 883, 885, 884),
                 (904, 879, 880, 907),
                 (883, 880, 879, 882),
                 (905, 908, 884, 885),
                 (892, 894, 896, 897),
                 (906, 905, 885, 887),
                 (886, 888, 889, 893),
                 (890, 891, 894, 892),
                 (901, 895, 894, 891),
                 (889, 890, 892, 893),
                 (893, 898, 900, 886),
                 (894, 895, 881, 896),
                 (898, 893, 892, 897),
                 (910, 909, 895, 901),
                 (896, 881, 899, 897),
                 (897, 899, 900, 898),
                 (907, 880, 884, 908),
                 (882, 902, 903, 883),
                 (909, 904, 881, 895),
                 (885, 883, 903, 887),
                 (882, 879, 904, 909),
                 (899, 907, 908, 900),
                 (902, 882, 909, 910),
                 (888, 886, 905, 906),
                 (886, 900, 908, 905),
                 (881, 904, 907, 899),
                 (915, 912, 919, 922),
                 (917, 916, 923, 924),
                 (913, 914, 921, 920),
                 (912, 911, 918, 919),
                 (916, 915, 922, 923),
                 (914, 917, 924, 921),
                 (911, 913, 920, 918),
                 (929, 936, 933, 926),
                 (931, 938, 937, 930),
                 (927, 934, 935, 928),
                 (926, 933, 932, 925),
                 (930, 937, 936, 929),
                 (928, 935, 938, 931),
                 (925, 932, 934, 927),
                 (940, 939, 947, 948),
                 (946, 942, 950, 954),
                 (944, 940, 948, 952),
                 (942, 945, 953, 950),
                 (939, 941, 949, 947),
                 (945, 943, 951, 953),
                 (943, 944, 952, 951),
                 (941, 946, 954, 949),
                 (956, 964, 963, 955),
                 (962, 970, 966, 958),
                 (960, 968, 964, 956),
                 (958, 966, 969, 961),
                 (955, 963, 965, 957),
                 (961, 969, 967, 959),
                 (959, 967, 968, 960),
                 (957, 965, 970, 962),
                 (991, 990, 971, 980),
                 (980, 971, 972, 984),
                 (973, 974, 988, 978),
                 (979, 973, 978, 982),
                 (972, 975, 983, 984),
                 (976, 986, 985, 977),
                 (974, 981, 986, 976),
                 (973, 979, 981, 974),
                 (989, 993, 988, 977),
                 (971, 987, 975, 972),
                 (977, 988, 974, 976),
                 (990, 993, 987, 971),
                 (989, 992, 983, 975),
                 (977, 985, 992, 989),
                 (978, 988, 993, 990),
                 (975, 987, 993, 989),
                 (982, 978, 990, 991),
                 (991, 980, 994, 1005),
                 (980, 984, 995, 994),
                 (996, 1001, 1003, 997),
                 (979, 982, 1001, 996),
                 (995, 984, 983, 998),
                 (999, 1000, 985, 986),
                 (997, 999, 986, 981),
                 (996, 997, 981, 979),
                 (1004, 1000, 1003, 1006),
                 (994, 995, 998, 1002),
                 (1000, 999, 997, 1003),
                 (1005, 994, 1002, 1006),
                 (1004, 998, 983, 992),
                 (1000, 1004, 992, 985),
                 (1001, 1005, 1006, 1003),
                 (998, 1004, 1006, 1002),
                 (982, 991, 1005, 1001),
                 (1065, 1032, 1034, 1066),
                 (1032, 1033, 1035, 1034),
                 (1066, 1034, 1036, 1067),
                 (1034, 1035, 1037, 1036),
                 (1011, 1012, 1032, 1065),
                 (1012, 1013, 1033, 1032),
                 (1013, 1007, 1014, 1033),
                 (1033, 1014, 1015, 1035),
                 (1035, 1015, 1016, 1037),
                 (1037, 1016, 1008, 1017),
                 (1036, 1037, 1017, 1018),
                 (1067, 1036, 1018, 1068),
                 (1069, 1038, 1040, 1070),
                 (1038, 1039, 1041, 1040),
                 (1070, 1040, 1042, 1071),
                 (1040, 1041, 1043, 1042),
                 (1068, 1018, 1038, 1069),
                 (1018, 1017, 1039, 1038),
                 (1017, 1008, 1019, 1039),
                 (1039, 1019, 1020, 1041),
                 (1041, 1020, 1021, 1043),
                 (1043, 1021, 1010, 1022),
                 (1042, 1043, 1022, 1023),
                 (1071, 1042, 1023, 1072),
                 (1073, 1044, 1046, 1074),
                 (1044, 1045, 1047, 1046),
                 (1074, 1046, 1048, 1075),
                 (1046, 1047, 1049, 1048),
                 (1072, 1023, 1044, 1073),
                 (1023, 1022, 1045, 1044),
                 (1022, 1010, 1024, 1045),
                 (1045, 1024, 1025, 1047),
                 (1047, 1025, 1026, 1049),
                 (1049, 1026, 1009, 1027),
                 (1048, 1049, 1027, 1028),
                 (1075, 1048, 1028, 1076),
                 (1077, 1050, 1052, 1078),
                 (1050, 1051, 1053, 1052),
                 (1078, 1052, 1054, 1079),
                 (1052, 1053, 1055, 1054),
                 (1076, 1028, 1050, 1077),
                 (1028, 1027, 1051, 1050),
                 (1027, 1009, 1029, 1051),
                 (1051, 1029, 1030, 1053),
                 (1053, 1030, 1031, 1055),
                 (1055, 1031, 1007, 1013),
                 (1054, 1055, 1013, 1012),
                 (1079, 1054, 1012, 1011),
                 (1056, 1057, 1060, 1059),
                 (1057, 1058, 1061, 1060),
                 (1059, 1060, 1063, 1062),
                 (1060, 1061, 1064, 1063),
                 (1010, 1021, 1056, 1024),
                 (1021, 1020, 1057, 1056),
                 (1020, 1019, 1058, 1057),
                 (1019, 1008, 1016, 1058),
                 (1058, 1016, 1015, 1061),
                 (1061, 1015, 1014, 1064),
                 (1064, 1014, 1007, 1031),
                 (1063, 1064, 1031, 1030),
                 (1062, 1063, 1030, 1029),
                 (1026, 1062, 1029, 1009),
                 (1025, 1059, 1062, 1026),
                 (1024, 1056, 1059, 1025),
                 (1123, 1104, 1095, 1121),
                 (1119, 1085, 1086, 1118),
                 (1111, 1106, 1080, 1082),
                 (1115, 1088, 1089, 1113),
                 (1128, 1105, 1091, 1126),
                 (1114, 1083, 1085, 1119),
                 (1118, 1086, 1087, 1117),
                 (1116, 1090, 1084, 1112),
                 (1106, 1098, 1102, 1110),
                 (1108, 1100, 1099, 1107),
                 (1104, 1096, 1101, 1109),
                 (1129, 1115, 1097, 1127),
                 (1105, 1097, 1103, 1111),
                 (1113, 1116, 1098, 1103),
                 (1109, 1101, 1100, 1108),
                 (1124, 1114, 1096, 1122),
                 (1094, 1109, 1108, 1093),
                 (1091, 1105, 1111, 1082),
                 (1095, 1104, 1109, 1094),
                 (1093, 1108, 1107, 1092),
                 (1080, 1106, 1110, 1081),
                 (1127, 1097, 1105, 1128),
                 (1103, 1098, 1106, 1111),
                 (1122, 1096, 1104, 1123),
                 (1120, 1083, 1114, 1124),
                 (1089, 1090, 1116, 1113),
                 (1125, 1088, 1115, 1129),
                 (1098, 1116, 1112, 1102),
                 (1100, 1118, 1117, 1099),
                 (1096, 1114, 1119, 1101),
                 (1097, 1115, 1113, 1103),
                 (1101, 1119, 1118, 1100),
                 (1084, 1120, 1124, 1112),
                 (1102, 1122, 1123, 1110),
                 (1112, 1124, 1122, 1102),
                 (1110, 1123, 1121, 1081),
                 (1087, 1125, 1129, 1117),
                 (1099, 1127, 1128, 1107),
                 (1117, 1129, 1127, 1099),
                 (1107, 1128, 1126, 1092),
                 (1173, 1171, 1145, 1154),
                 (1169, 1168, 1136, 1135),
                 (1161, 1132, 1130, 1156),
                 (1165, 1163, 1139, 1138),
                 (1178, 1176, 1141, 1155),
                 (1164, 1169, 1135, 1133),
                 (1168, 1167, 1137, 1136),
                 (1166, 1162, 1134, 1140),
                 (1156, 1160, 1152, 1148),
                 (1158, 1157, 1149, 1150),
                 (1154, 1159, 1151, 1146),
                 (1179, 1177, 1147, 1165),
                 (1155, 1161, 1153, 1147),
                 (1163, 1153, 1148, 1166),
                 (1159, 1158, 1150, 1151),
                 (1174, 1172, 1146, 1164),
                 (1144, 1143, 1158, 1159),
                 (1141, 1132, 1161, 1155),
                 (1145, 1144, 1159, 1154),
                 (1143, 1142, 1157, 1158),
                 (1130, 1131, 1160, 1156),
                 (1177, 1178, 1155, 1147),
                 (1153, 1161, 1156, 1148),
                 (1172, 1173, 1154, 1146),
                 (1170, 1174, 1164, 1133),
                 (1139, 1163, 1166, 1140),
                 (1175, 1179, 1165, 1138),
                 (1148, 1152, 1162, 1166),
                 (1150, 1149, 1167, 1168),
                 (1146, 1151, 1169, 1164),
                 (1147, 1153, 1163, 1165),
                 (1151, 1150, 1168, 1169),
                 (1134, 1162, 1174, 1170),
                 (1152, 1160, 1173, 1172),
                 (1162, 1152, 1172, 1174),
                 (1160, 1131, 1171, 1173),
                 (1137, 1167, 1179, 1175),
                 (1149, 1157, 1178, 1177),
                 (1167, 1149, 1177, 1179),
                 (1157, 1142, 1176, 1178),
                 (1180, 1181, 1183, 1182),
                 (1182, 1183, 1187, 1186),
                 (1186, 1187, 1185, 1184),
                 (1184, 1185, 1181, 1180),
                 (1188, 1189, 1191, 1190),
                 (1190, 1191, 1195, 1194),
                 (1194, 1195, 1193, 1192),
                 (1192, 1193, 1189, 1188),
                 (1196, 1197, 1199, 1198),
                 (1198, 1199, 1203, 1202),
                 (1202, 1203, 1201, 1200),
                 (1200, 1201, 1197, 1196),
                 (1204, 1205, 1207, 1206),
                 (1206, 1207, 1211, 1210),
                 (1210, 1211, 1209, 1208),
                 (1208, 1209, 1205, 1204),
                 (1212, 1213, 1215, 1214),
                 (1214, 1215, 1219, 1218),
                 (1218, 1219, 1217, 1216),
                 (1216, 1217, 1213, 1212),
                 (1220, 1221, 1223, 1222),
                 (1222, 1223, 1227, 1226),
                 (1226, 1227, 1225, 1224),
                 (1224, 1225, 1221, 1220),
                 (1228, 1229, 1231, 1230),
                 (1230, 1231, 1235, 1234),
                 (1234, 1235, 1233, 1232),
                 (1232, 1233, 1229, 1228),
                 (1236, 1237, 1239, 1238),
                 (1238, 1239, 1243, 1242),
                 (1242, 1243, 1241, 1240),
                 (1240, 1241, 1237, 1236),
                 (1244, 1245, 1247, 1246),
                 (1246, 1247, 1251, 1250),
                 (1250, 1251, 1249, 1248),
                 (1248, 1249, 1245, 1244),
                 (1252, 1253, 1255, 1254),
                 (1254, 1255, 1259, 1258),
                 (1258, 1259, 1257, 1256),
                 (1256, 1257, 1253, 1252),
                 (1260, 1261, 1263, 1262),
                 (1262, 1263, 1267, 1266),
                 (1266, 1267, 1265, 1264),
                 (1264, 1265, 1261, 1260),
                 (1268, 1269, 1271, 1270),
                 (1270, 1271, 1275, 1274),
                 (1274, 1275, 1273, 1272),
                 (1272, 1273, 1269, 1268),
                 (1276, 1277, 1279, 1278),
                 (1278, 1279, 1283, 1282),
                 (1282, 1283, 1281, 1280),
                 (1280, 1281, 1277, 1276),
                 (1284, 1285, 1287, 1286),
                 (1286, 1287, 1291, 1290),
                 (1290, 1291, 1289, 1288),
                 (1288, 1289, 1285, 1284),
                 (1292, 1293, 1295, 1294),
                 (1294, 1295, 1299, 1298),
                 (1298, 1299, 1297, 1296),
                 (1296, 1297, 1293, 1292),
                 (1300, 1302, 1303, 1301),
                 (1302, 1306, 1307, 1303),
                 (1306, 1304, 1305, 1307),
                 (1304, 1300, 1301, 1305),
                 (1308, 1310, 1311, 1309),
                 (1310, 1314, 1315, 1311),
                 (1314, 1312, 1313, 1315),
                 (1312, 1308, 1309, 1313),
                 (1316, 1318, 1319, 1317),
                 (1318, 1322, 1323, 1319),
                 (1322, 1320, 1321, 1323),
                 (1320, 1316, 1317, 1321),
                 (1324, 1326, 1327, 1325),
                 (1326, 1330, 1331, 1327),
                 (1330, 1328, 1329, 1331),
                 (1328, 1324, 1325, 1329),
                 (1332, 1334, 1335, 1333),
                 (1334, 1338, 1339, 1335),
                 (1338, 1336, 1337, 1339),
                 (1336, 1332, 1333, 1337),
                 (1340, 1342, 1343, 1341),
                 (1342, 1346, 1347, 1343),
                 (1346, 1344, 1345, 1347),
                 (1344, 1340, 1341, 1345),
                 (1348, 1350, 1351, 1349),
                 (1350, 1354, 1355, 1351),
                 (1354, 1352, 1353, 1355),
                 (1352, 1348, 1349, 1353),
                 (1356, 1358, 1359, 1357),
                 (1358, 1362, 1363, 1359),
                 (1362, 1360, 1361, 1363),
                 (1360, 1356, 1357, 1361),
                 (1364, 1366, 1367, 1365),
                 (1366, 1370, 1371, 1367),
                 (1370, 1368, 1369, 1371),
                 (1368, 1364, 1365, 1369),
                 (1372, 1374, 1375, 1373),
                 (1374, 1378, 1379, 1375),
                 (1378, 1376, 1377, 1379),
                 (1376, 1372, 1373, 1377),
                 (1380, 1382, 1383, 1381),
                 (1382, 1386, 1387, 1383),
                 (1386, 1384, 1385, 1387),
                 (1384, 1380, 1381, 1385),
                 (1388, 1390, 1391, 1389),
                 (1390, 1394, 1395, 1391),
                 (1394, 1392, 1393, 1395),
                 (1392, 1388, 1389, 1393),
                 (1396, 1398, 1399, 1397),
                 (1398, 1402, 1403, 1399),
                 (1402, 1400, 1401, 1403),
                 (1400, 1396, 1397, 1401),
                 (1404, 1406, 1407, 1405),
                 (1406, 1410, 1411, 1407),
                 (1410, 1408, 1409, 1411),
                 (1408, 1404, 1405, 1409),
                 (1412, 1414, 1415, 1413),
                 (1414, 1418, 1419, 1415),
                 (1418, 1416, 1417, 1419),
                 (1416, 1412, 1413, 1417))





        scene = bpy.context.scene
        me = bpy.data.meshes.new("Human_GEO")
        me.from_pydata(verts, [], faces)
        ob = bpy.data.objects.new("Human_GEO", me)
        scene.collection.objects.link(ob)



        #=============================================
        # Create "Test_rig_main" Metarig
        #=============================================



        # Check Rigify in preferences

        disable_Rigify = bpy.ops.preferences.addon_disable(module="rigify")

        if disable_Rigify:
            bpy.ops.preferences.addon_enable(module="rigify")

        else:
            pass


        if bpy.context.mode == 'OBJECT':

            # Create single bone / go to Edit Mode / select and delete bone
            bpy.ops.object.armature_add(enter_editmode=0, align='WORLD', location=(0, 0, 0), scale=(1, 1, 1))
            bpy.ops.object.mode_set(mode='EDIT', toggle=False)
            bpy.ops.armature.select_all(action='SELECT')
            bpy.ops.armature.delete()


        else:
            bpy.ops.object.mode_set(mode='EDIT', toggle=False)


        # Active object
        ob = bpy.context.object

        # Rig Name
        if ob.type == 'ARMATURE':
            ob.name = 'human_metarig'

        arm = bpy.data.objects[ob.name].data


        for i in range(6):
            arm.rigify_colors.add()


        arm.rigify_colors[0].name = "Root"
        arm.rigify_colors[0].active = Color((0.5490196347236633, 1.0, 1.0))
        arm.rigify_colors[0].normal = Color((0.4352940022945404, 0.18431399762630463, 0.4156860113143921))
        arm.rigify_colors[0].select = Color((0.31372547149658203, 0.7843138575553894, 1.0))
        arm.rigify_colors[0].standard_colors_lock = True
        arm.rigify_colors[1].name = "IK"
        arm.rigify_colors[1].active = Color((0.5490196347236633, 1.0, 1.0))
        arm.rigify_colors[1].normal = Color((0.6039220094680786, 0.0, 0.0))
        arm.rigify_colors[1].select = Color((0.31372547149658203, 0.7843138575553894, 1.0))
        arm.rigify_colors[1].standard_colors_lock = True
        arm.rigify_colors[2].name = "Special"
        arm.rigify_colors[2].active = Color((0.5490196347236633, 1.0, 1.0))
        arm.rigify_colors[2].normal = Color((0.9568629860877991, 0.7882350087165833, 0.04705899953842163))
        arm.rigify_colors[2].select = Color((0.31372547149658203, 0.7843138575553894, 1.0))
        arm.rigify_colors[2].standard_colors_lock = True
        arm.rigify_colors[3].name = "Tweak"
        arm.rigify_colors[3].active = Color((0.5490196347236633, 1.0, 1.0))
        arm.rigify_colors[3].normal = Color((0.03921600058674812, 0.21176500618457794, 0.5803920030593872))
        arm.rigify_colors[3].select = Color((0.31372547149658203, 0.7843138575553894, 1.0))
        arm.rigify_colors[3].standard_colors_lock = True
        arm.rigify_colors[4].name = "FK"
        arm.rigify_colors[4].active = Color((0.5490196347236633, 1.0, 1.0))
        arm.rigify_colors[4].normal = Color((0.11764699965715408, 0.5686269998550415, 0.035294000059366226))
        arm.rigify_colors[4].select = Color((0.31372547149658203, 0.7843138575553894, 1.0))
        arm.rigify_colors[4].standard_colors_lock = True
        arm.rigify_colors[5].name = "Extra"
        arm.rigify_colors[5].active = Color((0.5490196347236633, 1.0, 1.0))
        arm.rigify_colors[5].normal = Color((0.9686279892921448, 0.2509799897670746, 0.09411799907684326))
        arm.rigify_colors[5].select = Color((0.31372547149658203, 0.7843138575553894, 1.0))
        arm.rigify_colors[5].standard_colors_lock = True

        for i in range(29):
            arm.rigify_layers.add()

        arm.rigify_layers[0].name = "Face"
        arm.rigify_layers[0].row = 1
        arm.rigify_layers[0].selset = False
        arm.rigify_layers[0].group = 5
        arm.rigify_layers[1].name = "Face (Primary)"
        arm.rigify_layers[1].row = 2
        arm.rigify_layers[1].selset = False
        arm.rigify_layers[1].group = 2
        arm.rigify_layers[2].name = "Face (Secondary)"
        arm.rigify_layers[2].row = 2
        arm.rigify_layers[2].selset = False
        arm.rigify_layers[2].group = 3
        arm.rigify_layers[3].name = "Torso"
        arm.rigify_layers[3].row = 3
        arm.rigify_layers[3].selset = False
        arm.rigify_layers[3].group = 3
        arm.rigify_layers[4].name = "Torso (Tweak)"
        arm.rigify_layers[4].row = 4
        arm.rigify_layers[4].selset = False
        arm.rigify_layers[4].group = 4
        arm.rigify_layers[5].name = "Fingers"
        arm.rigify_layers[5].row = 5
        arm.rigify_layers[5].selset = False
        arm.rigify_layers[5].group = 6
        arm.rigify_layers[6].name = "Fingers (Detail)"
        arm.rigify_layers[6].row = 6
        arm.rigify_layers[6].selset = False
        arm.rigify_layers[6].group = 5
        arm.rigify_layers[7].name = "Arm.L (IK)"
        arm.rigify_layers[7].row = 7
        arm.rigify_layers[7].selset = False
        arm.rigify_layers[7].group = 2
        arm.rigify_layers[8].name = "Arm.L (FK)"
        arm.rigify_layers[8].row = 8
        arm.rigify_layers[8].selset = False
        arm.rigify_layers[8].group = 5
        arm.rigify_layers[9].name = "Arm.L (Tweak)"
        arm.rigify_layers[9].row = 9
        arm.rigify_layers[9].selset = False
        arm.rigify_layers[9].group = 4
        arm.rigify_layers[10].name = "Arm.R (IK)"
        arm.rigify_layers[10].row = 7
        arm.rigify_layers[10].selset = False
        arm.rigify_layers[10].group = 2
        arm.rigify_layers[11].name = "Arm.R (FK)"
        arm.rigify_layers[11].row = 8
        arm.rigify_layers[11].selset = False
        arm.rigify_layers[11].group = 5
        arm.rigify_layers[12].name = "Arm.R (Tweak)"
        arm.rigify_layers[12].row = 9
        arm.rigify_layers[12].selset = False
        arm.rigify_layers[12].group = 4
        arm.rigify_layers[13].name = "Leg.L (IK)"
        arm.rigify_layers[13].row = 10
        arm.rigify_layers[13].selset = False
        arm.rigify_layers[13].group = 2
        arm.rigify_layers[14].name = "Leg.L (FK)"
        arm.rigify_layers[14].row = 11
        arm.rigify_layers[14].selset = False
        arm.rigify_layers[14].group = 5
        arm.rigify_layers[15].name = "Leg.L (Tweak)"
        arm.rigify_layers[15].row = 12
        arm.rigify_layers[15].selset = False
        arm.rigify_layers[15].group = 4
        arm.rigify_layers[16].name = "Leg.R (IK)"
        arm.rigify_layers[16].row = 10
        arm.rigify_layers[16].selset = False
        arm.rigify_layers[16].group = 2
        arm.rigify_layers[17].name = "Leg.R (FK)"
        arm.rigify_layers[17].row = 11
        arm.rigify_layers[17].selset = False
        arm.rigify_layers[17].group = 5
        arm.rigify_layers[18].name = "Leg.R (Tweak)"
        arm.rigify_layers[18].row = 12
        arm.rigify_layers[18].selset = False
        arm.rigify_layers[18].group = 4
        arm.rigify_layers[19].name = ""
        arm.rigify_layers[19].row = 1
        arm.rigify_layers[19].selset = False
        arm.rigify_layers[19].group = 0
        arm.rigify_layers[20].name = ""
        arm.rigify_layers[20].row = 1
        arm.rigify_layers[20].selset = False
        arm.rigify_layers[20].group = 0
        arm.rigify_layers[21].name = ""
        arm.rigify_layers[21].row = 1
        arm.rigify_layers[21].selset = False
        arm.rigify_layers[21].group = 0
        arm.rigify_layers[22].name = ""
        arm.rigify_layers[22].row = 1
        arm.rigify_layers[22].selset = False
        arm.rigify_layers[22].group = 0
        arm.rigify_layers[23].name = ""
        arm.rigify_layers[23].row = 1
        arm.rigify_layers[23].selset = False
        arm.rigify_layers[23].group = 0
        arm.rigify_layers[24].name = ""
        arm.rigify_layers[24].row = 1
        arm.rigify_layers[24].selset = False
        arm.rigify_layers[24].group = 0
        arm.rigify_layers[25].name = ""
        arm.rigify_layers[25].row = 1
        arm.rigify_layers[25].selset = False
        arm.rigify_layers[25].group = 0
        arm.rigify_layers[26].name = ""
        arm.rigify_layers[26].row = 1
        arm.rigify_layers[26].selset = False
        arm.rigify_layers[26].group = 0
        arm.rigify_layers[27].name = ""
        arm.rigify_layers[27].row = 1
        arm.rigify_layers[27].selset = False
        arm.rigify_layers[27].group = 0
        arm.rigify_layers[28].name = "Root"
        arm.rigify_layers[28].row = 14
        arm.rigify_layers[28].selset = False
        arm.rigify_layers[28].group = 1

        bones = {}

        bone = arm.edit_bones.new('spine')
        bone.head = 0.0000, 0.0552, 1.0099
        bone.tail = 0.0000, 0.0172, 1.1573
        bone.roll = -0.0000
        bone.use_connect = False
        bones['spine'] = bone.name
        bone = arm.edit_bones.new('spine.001')
        bone.head = 0.0000, 0.0172, 1.1573
        bone.tail = 0.0000, 0.0004, 1.2929
        bone.roll = 0.0000
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['spine']]
        bones['spine.001'] = bone.name
        bone = arm.edit_bones.new('pelvis.L')
        bone.head = 0.0000, 0.0552, 1.0099
        bone.tail = 0.1112, -0.0451, 1.1533
        bone.roll = -1.0756
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['spine']]
        bones['pelvis.L'] = bone.name
        bone = arm.edit_bones.new('pelvis.R')
        bone.head = 0.0000, 0.0552, 1.0099
        bone.tail = -0.1112, -0.0451, 1.1533
        bone.roll = 1.0756
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['spine']]
        bones['pelvis.R'] = bone.name
        bone = arm.edit_bones.new('thigh.L')
        bone.head = 0.0980, -0.0043, 1.0720
        bone.tail = 0.0980, -0.0286, 0.5372
        bone.roll = 0.0000
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['spine']]
        bones['thigh.L'] = bone.name
        bone = arm.edit_bones.new('thigh.R')
        bone.head = -0.0980, -0.0043, 1.0720
        bone.tail = -0.0980, -0.0286, 0.5372
        bone.roll = 0.0000
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['spine']]
        bones['thigh.R'] = bone.name
        bone = arm.edit_bones.new('spine.002')
        bone.head = 0.0000, 0.0004, 1.2929
        bone.tail = 0.0000, 0.0059, 1.4657
        bone.roll = 0.0000
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['spine.001']]
        bones['spine.002'] = bone.name
        bone = arm.edit_bones.new('shin.L')
        bone.head = 0.0980, -0.0286, 0.5372
        bone.tail = 0.0980, 0.0162, 0.0852
        bone.roll = 0.0000
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['thigh.L']]
        bones['shin.L'] = bone.name
        bone = arm.edit_bones.new('shin.R')
        bone.head = -0.0980, -0.0286, 0.5372
        bone.tail = -0.0980, 0.0162, 0.0852
        bone.roll = 0.0000
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['thigh.R']]
        bones['shin.R'] = bone.name
        bone = arm.edit_bones.new('spine.003')
        bone.head = 0.0000, 0.0059, 1.4657
        bone.tail = 0.0000, 0.0114, 1.6492
        bone.roll = 0.0000
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['spine.002']]
        bones['spine.003'] = bone.name
        bone = arm.edit_bones.new('foot.L')
        bone.head = 0.0980, 0.0162, 0.0852
        bone.tail = 0.0980, -0.0934, 0.0167
        bone.roll = 0.0000
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['shin.L']]
        bones['foot.L'] = bone.name
        bone = arm.edit_bones.new('foot.R')
        bone.head = -0.0980, 0.0162, 0.0852
        bone.tail = -0.0980, -0.0934, 0.0167
        bone.roll = 0.0000
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['shin.R']]
        bones['foot.R'] = bone.name
        bone = arm.edit_bones.new('spine.004')
        bone.head = 0.0000, 0.0114, 1.6492
        bone.tail = -0.0000, 0.0082, 1.6876
        bone.roll = 0.0000
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['spine.003']]
        bones['spine.004'] = bone.name
        bone = arm.edit_bones.new('shoulder.L')
        bone.head = 0.0183, -0.0684, 1.6051
        bone.tail = 0.1461, 0.0205, 1.6050
        bone.roll = 0.0005
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['spine.003']]
        bones['shoulder.L'] = bone.name
        bone = arm.edit_bones.new('shoulder.R')
        bone.head = -0.0183, -0.0684, 1.6051
        bone.tail = -0.1461, 0.0205, 1.6050
        bone.roll = -0.0005
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['spine.003']]
        bones['shoulder.R'] = bone.name
        bone = arm.edit_bones.new('breast.L')
        bone.head = 0.1184, 0.0485, 1.4596
        bone.tail = 0.1184, -0.0907, 1.4596
        bone.roll = -0.0000
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['spine.003']]
        bones['breast.L'] = bone.name
        bone = arm.edit_bones.new('breast.R')
        bone.head = -0.1184, 0.0485, 1.4596
        bone.tail = -0.1184, -0.0907, 1.4596
        bone.roll = -0.0000
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['spine.003']]
        bones['breast.R'] = bone.name
        bone = arm.edit_bones.new('toe.L')
        bone.head = 0.0980, -0.0934, 0.0167
        bone.tail = 0.0980, -0.1606, 0.0167
        bone.roll = -0.0000
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['foot.L']]
        bones['toe.L'] = bone.name
        bone = arm.edit_bones.new('heel.02.L')
        bone.head = 0.0600, 0.0459, 0.0000
        bone.tail = 0.1400, 0.0459, 0.0000
        bone.roll = 0.0000
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['foot.L']]
        bones['heel.02.L'] = bone.name
        bone = arm.edit_bones.new('toe.R')
        bone.head = -0.0980, -0.0934, 0.0167
        bone.tail = -0.0980, -0.1606, 0.0167
        bone.roll = -0.0000
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['foot.R']]
        bones['toe.R'] = bone.name
        bone = arm.edit_bones.new('heel.02.R')
        bone.head = -0.0600, 0.0459, 0.0000
        bone.tail = -0.1400, 0.0459, 0.0000
        bone.roll = -0.0000
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['foot.R']]
        bones['heel.02.R'] = bone.name
        bone = arm.edit_bones.new('spine.005')
        bone.head = -0.0000, 0.0082, 1.6876
        bone.tail = -0.0000, 0.0019, 1.7452
        bone.roll = 0.0000
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['spine.004']]
        bones['spine.005'] = bone.name
        bone = arm.edit_bones.new('upper_arm.L')
        bone.head = 0.1797, 0.0267, 1.5846
        bone.tail = 0.4268, 0.0885, 1.4491
        bone.roll = 2.0724
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['shoulder.L']]
        bones['upper_arm.L'] = bone.name
        bone = arm.edit_bones.new('upper_arm.R')
        bone.head = -0.1797, 0.0267, 1.5846
        bone.tail = -0.4268, 0.0885, 1.4491
        bone.roll = -2.0724
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['shoulder.R']]
        bones['upper_arm.R'] = bone.name
        bone = arm.edit_bones.new('spine.006')
        bone.head = -0.0000, 0.0019, 1.7452
        bone.tail = -0.0000, -0.0218, 1.9667
        bone.roll = 0.0000
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['spine.005']]
        bones['spine.006'] = bone.name
        bone = arm.edit_bones.new('forearm.L')
        bone.head = 0.4268, 0.0885, 1.4491
        bone.tail = 0.6438, 0.0492, 1.3061
        bone.roll = 2.1535
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['upper_arm.L']]
        bones['forearm.L'] = bone.name
        bone = arm.edit_bones.new('forearm.R')
        bone.head = -0.4268, 0.0885, 1.4491
        bone.tail = -0.6438, 0.0492, 1.3061
        bone.roll = -2.1535
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['upper_arm.R']]
        bones['forearm.R'] = bone.name
        bone = arm.edit_bones.new('hand.L')
        bone.head = 0.6438, 0.0492, 1.3061
        bone.tail = 0.7078, 0.0412, 1.2585
        bone.roll = 2.2103
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['forearm.L']]
        bones['hand.L'] = bone.name
        bone = arm.edit_bones.new('hand.R')
        bone.head = -0.6438, 0.0492, 1.3061
        bone.tail = -0.7078, 0.0412, 1.2585
        bone.roll = -2.2103
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['forearm.R']]
        bones['hand.R'] = bone.name
        bone = arm.edit_bones.new('palm.01.L')
        bone.head = 0.6765, 0.0224, 1.2882
        bone.tail = 0.7285, 0.0057, 1.2467
        bone.roll = -2.2772
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['hand.L']]
        bones['palm.01.L'] = bone.name
        bone = arm.edit_bones.new('palm.02.L')
        bone.head = 0.6814, 0.0389, 1.2877
        bone.tail = 0.7334, 0.0297, 1.2471
        bone.roll = -2.3710
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['hand.L']]
        bones['palm.02.L'] = bone.name
        bone = arm.edit_bones.new('palm.03.L')
        bone.head = 0.6807, 0.0545, 1.2874
        bone.tail = 0.7355, 0.0520, 1.2471
        bone.roll = -2.4812
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['hand.L']]
        bones['palm.03.L'] = bone.name
        bone = arm.edit_bones.new('palm.04.L')
        bone.head = 0.6791, 0.0696, 1.2843
        bone.tail = 0.7350, 0.0773, 1.2438
        bone.roll = -2.5949
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['hand.L']]
        bones['palm.04.L'] = bone.name
        bone = arm.edit_bones.new('palm.01.R')
        bone.head = -0.6765, 0.0224, 1.2882
        bone.tail = -0.7285, 0.0057, 1.2467
        bone.roll = 2.2772
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['hand.R']]
        bones['palm.01.R'] = bone.name
        bone = arm.edit_bones.new('palm.02.R')
        bone.head = -0.6814, 0.0389, 1.2877
        bone.tail = -0.7334, 0.0297, 1.2471
        bone.roll = 2.3710
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['hand.R']]
        bones['palm.02.R'] = bone.name
        bone = arm.edit_bones.new('palm.03.R')
        bone.head = -0.6807, 0.0545, 1.2874
        bone.tail = -0.7355, 0.0520, 1.2471
        bone.roll = 2.4812
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['hand.R']]
        bones['palm.03.R'] = bone.name
        bone = arm.edit_bones.new('palm.04.R')
        bone.head = -0.6791, 0.0696, 1.2843
        bone.tail = -0.7350, 0.0773, 1.2438
        bone.roll = 2.5949
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['hand.R']]
        bones['palm.04.R'] = bone.name
        bone = arm.edit_bones.new('f_index.01.L')
        bone.head = 0.7285, 0.0057, 1.2467
        bone.tail = 0.7590, -0.0042, 1.2145
        bone.roll = -2.1019
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['palm.01.L']]
        bones['f_index.01.L'] = bone.name
        bone = arm.edit_bones.new('thumb.01.L')
        bone.head = 0.6535, 0.0117, 1.2751
        bone.tail = 0.6754, -0.0082, 1.2483
        bone.roll = -0.7854
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['palm.01.L']]
        bones['thumb.01.L'] = bone.name
        bone = arm.edit_bones.new('f_middle.01.L')
        bone.head = 0.7334, 0.0297, 1.2471
        bone.tail = 0.7663, 0.0235, 1.2111
        bone.roll = -2.1746
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['palm.02.L']]
        bones['f_middle.01.L'] = bone.name
        bone = arm.edit_bones.new('f_ring.01.L')
        bone.head = 0.7355, 0.0520, 1.2471
        bone.tail = 0.7659, 0.0505, 1.2131
        bone.roll = -2.2625
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['palm.03.L']]
        bones['f_ring.01.L'] = bone.name
        bone = arm.edit_bones.new('f_pinky.01.L')
        bone.head = 0.7350, 0.0773, 1.2438
        bone.tail = 0.7559, 0.0800, 1.2221
        bone.roll = -2.4309
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['palm.04.L']]
        bones['f_pinky.01.L'] = bone.name
        bone = arm.edit_bones.new('f_index.01.R')
        bone.head = -0.7285, 0.0057, 1.2467
        bone.tail = -0.7590, -0.0042, 1.2145
        bone.roll = 2.1019
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['palm.01.R']]
        bones['f_index.01.R'] = bone.name
        bone = arm.edit_bones.new('thumb.01.R')
        bone.head = -0.6535, 0.0117, 1.2751
        bone.tail = -0.6754, -0.0082, 1.2483
        bone.roll = 0.7854
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['palm.01.R']]
        bones['thumb.01.R'] = bone.name
        bone = arm.edit_bones.new('f_middle.01.R')
        bone.head = -0.7334, 0.0297, 1.2471
        bone.tail = -0.7663, 0.0235, 1.2111
        bone.roll = 2.1746
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['palm.02.R']]
        bones['f_middle.01.R'] = bone.name
        bone = arm.edit_bones.new('f_ring.01.R')
        bone.head = -0.7355, 0.0520, 1.2471
        bone.tail = -0.7659, 0.0505, 1.2131
        bone.roll = 2.2625
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['palm.03.R']]
        bones['f_ring.01.R'] = bone.name
        bone = arm.edit_bones.new('f_pinky.01.R')
        bone.head = -0.7350, 0.0773, 1.2438
        bone.tail = -0.7559, 0.0800, 1.2221
        bone.roll = 2.4309
        bone.use_connect = False
        bone.parent = arm.edit_bones[bones['palm.04.R']]
        bones['f_pinky.01.R'] = bone.name
        bone = arm.edit_bones.new('f_index.02.L')
        bone.head = 0.7590, -0.0042, 1.2145
        bone.tail = 0.7755, -0.0096, 1.1926
        bone.roll = -1.9643
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_index.01.L']]
        bones['f_index.02.L'] = bone.name
        bone = arm.edit_bones.new('thumb.02.L')
        bone.head = 0.6754, -0.0082, 1.2483
        bone.tail = 0.6948, -0.0187, 1.2233
        bone.roll = -0.7854
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['thumb.01.L']]
        bones['thumb.02.L'] = bone.name
        bone = arm.edit_bones.new('f_middle.02.L')
        bone.head = 0.7663, 0.0235, 1.2111
        bone.tail = 0.7843, 0.0198, 1.1851
        bone.roll = -2.0099
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_middle.01.L']]
        bones['f_middle.02.L'] = bone.name
        bone = arm.edit_bones.new('f_ring.02.L')
        bone.head = 0.7659, 0.0505, 1.2131
        bone.tail = 0.7842, 0.0494, 1.1869
        bone.roll = -2.1299
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_ring.01.L']]
        bones['f_ring.02.L'] = bone.name
        bone = arm.edit_bones.new('f_pinky.02.L')
        bone.head = 0.7559, 0.0800, 1.2221
        bone.tail = 0.7701, 0.0816, 1.2043
        bone.roll = -2.3280
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_pinky.01.L']]
        bones['f_pinky.02.L'] = bone.name
        bone = arm.edit_bones.new('f_index.02.R')
        bone.head = -0.7590, -0.0042, 1.2145
        bone.tail = -0.7755, -0.0096, 1.1926
        bone.roll = 1.9643
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_index.01.R']]
        bones['f_index.02.R'] = bone.name
        bone = arm.edit_bones.new('thumb.02.R')
        bone.head = -0.6754, -0.0082, 1.2483
        bone.tail = -0.6948, -0.0187, 1.2233
        bone.roll = 0.7854
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['thumb.01.R']]
        bones['thumb.02.R'] = bone.name
        bone = arm.edit_bones.new('f_middle.02.R')
        bone.head = -0.7663, 0.0235, 1.2111
        bone.tail = -0.7843, 0.0198, 1.1851
        bone.roll = 2.0099
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_middle.01.R']]
        bones['f_middle.02.R'] = bone.name
        bone = arm.edit_bones.new('f_ring.02.R')
        bone.head = -0.7659, 0.0505, 1.2131
        bone.tail = -0.7842, 0.0494, 1.1869
        bone.roll = 2.1299
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_ring.01.R']]
        bones['f_ring.02.R'] = bone.name
        bone = arm.edit_bones.new('f_pinky.02.R')
        bone.head = -0.7559, 0.0800, 1.2221
        bone.tail = -0.7701, 0.0816, 1.2043
        bone.roll = 2.3280
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_pinky.01.R']]
        bones['f_pinky.02.R'] = bone.name
        bone = arm.edit_bones.new('f_index.03.L')
        bone.head = 0.7755, -0.0096, 1.1926
        bone.tail = 0.7882, -0.0140, 1.1731
        bone.roll = -1.8718
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_index.02.L']]
        bones['f_index.03.L'] = bone.name
        bone = arm.edit_bones.new('thumb.03.L')
        bone.head = 0.6948, -0.0187, 1.2233
        bone.tail = 0.7078, -0.0227, 1.2061
        bone.roll = -0.7854
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['thumb.02.L']]
        bones['thumb.03.L'] = bone.name
        bone = arm.edit_bones.new('f_middle.03.L')
        bone.head = 0.7843, 0.0198, 1.1851
        bone.tail = 0.7970, 0.0171, 1.1658
        bone.roll = -1.9834
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_middle.02.L']]
        bones['f_middle.03.L'] = bone.name
        bone = arm.edit_bones.new('f_ring.03.L')
        bone.head = 0.7842, 0.0494, 1.1869
        bone.tail = 0.7931, 0.0487, 1.1702
        bone.roll = -1.9904
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_ring.02.L']]
        bones['f_ring.03.L'] = bone.name
        bone = arm.edit_bones.new('f_pinky.03.L')
        bone.head = 0.7701, 0.0816, 1.2043
        bone.tail = 0.7787, 0.0824, 1.1903
        bone.roll = -2.2009
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_pinky.02.L']]
        bones['f_pinky.03.L'] = bone.name
        bone = arm.edit_bones.new('f_index.03.R')
        bone.head = -0.7755, -0.0096, 1.1926
        bone.tail = -0.7882, -0.0140, 1.1731
        bone.roll = 1.8718
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_index.02.R']]
        bones['f_index.03.R'] = bone.name
        bone = arm.edit_bones.new('thumb.03.R')
        bone.head = -0.6948, -0.0187, 1.2233
        bone.tail = -0.7078, -0.0227, 1.2061
        bone.roll = 0.7854
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['thumb.02.R']]
        bones['thumb.03.R'] = bone.name
        bone = arm.edit_bones.new('f_middle.03.R')
        bone.head = -0.7843, 0.0198, 1.1851
        bone.tail = -0.7970, 0.0171, 1.1658
        bone.roll = 1.9834
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_middle.02.R']]
        bones['f_middle.03.R'] = bone.name
        bone = arm.edit_bones.new('f_ring.03.R')
        bone.head = -0.7842, 0.0494, 1.1869
        bone.tail = -0.7931, 0.0487, 1.1702
        bone.roll = 1.9904
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_ring.02.R']]
        bones['f_ring.03.R'] = bone.name
        bone = arm.edit_bones.new('f_pinky.03.R')
        bone.head = -0.7701, 0.0816, 1.2043
        bone.tail = -0.7787, 0.0824, 1.1903
        bone.roll = 2.2009
        bone.use_connect = True
        bone.parent = arm.edit_bones[bones['f_pinky.02.R']]
        bones['f_pinky.03.R'] = bone.name

        obj = bpy.context.object

        bpy.ops.object.mode_set(mode='OBJECT')
        pbone = obj.pose.bones[bones['spine']]
        pbone.rigify_type = 'spines.basic_spine'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.fk_layers = [False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['spine.001']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['pelvis.L']]
        pbone.rigify_type = 'basic.super_copy'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.make_control = False
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['pelvis.R']]
        pbone.rigify_type = 'basic.super_copy'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.make_control = False
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['thigh.L']]
        pbone.rigify_type = 'limbs.super_limb'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.limb_type = "leg"
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.fk_layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['thigh.R']]
        pbone.rigify_type = 'limbs.super_limb'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.fk_layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.limb_type = "leg"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['spine.002']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['shin.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['shin.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['spine.003']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['foot.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['foot.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['spine.004']]
        pbone.rigify_type = 'spines.super_head'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.connect_chain = True
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['shoulder.L']]
        pbone.rigify_type = 'basic.super_copy'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.make_widget = True
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.super_copy_widget_type = "shoulder"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['shoulder.R']]
        pbone.rigify_type = 'basic.super_copy'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.make_widget = True
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.super_copy_widget_type = "shoulder"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['breast.L']]
        pbone.rigify_type = 'basic.super_copy'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['breast.R']]
        pbone.rigify_type = 'basic.super_copy'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['toe.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['heel.02.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['toe.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['heel.02.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['spine.005']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['upper_arm.L']]
        pbone.rigify_type = 'limbs.super_limb'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.fk_layers = [False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.rotation_axis = "x"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['upper_arm.R']]
        pbone.rigify_type = 'limbs.super_limb'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.fk_layers = [False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.rotation_axis = "x"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['spine.006']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['forearm.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['forearm.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['hand.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['hand.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['palm.01.L']]
        pbone.rigify_type = 'limbs.super_palm'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['palm.02.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['palm.03.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['palm.04.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['palm.01.R']]
        pbone.rigify_type = 'limbs.super_palm'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['palm.02.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['palm.03.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['palm.04.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'YXZ'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_index.01.L']]
        pbone.rigify_type = 'limbs.super_finger'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.primary_rotation_axis = "X"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['thumb.01.L']]
        pbone.rigify_type = 'limbs.super_finger'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.primary_rotation_axis = "X"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['f_middle.01.L']]
        pbone.rigify_type = 'limbs.super_finger'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.primary_rotation_axis = "X"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['f_ring.01.L']]
        pbone.rigify_type = 'limbs.super_finger'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.primary_rotation_axis = "X"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['f_pinky.01.L']]
        pbone.rigify_type = 'limbs.super_finger'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.primary_rotation_axis = "X"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['f_index.01.R']]
        pbone.rigify_type = 'limbs.super_finger'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.primary_rotation_axis = "X"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['thumb.01.R']]
        pbone.rigify_type = 'limbs.super_finger'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.primary_rotation_axis = "X"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['f_middle.01.R']]
        pbone.rigify_type = 'limbs.super_finger'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.primary_rotation_axis = "X"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['f_ring.01.R']]
        pbone.rigify_type = 'limbs.super_finger'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.primary_rotation_axis = "X"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['f_pinky.01.R']]
        pbone.rigify_type = 'limbs.super_finger'
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        try:
            pbone.rigify_parameters.tweak_layers = [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        except AttributeError:
            pass
        try:
            pbone.rigify_parameters.primary_rotation_axis = "X"
        except AttributeError:
            pass
        pbone = obj.pose.bones[bones['f_index.02.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['thumb.02.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_middle.02.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_ring.02.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_pinky.02.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_index.02.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['thumb.02.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_middle.02.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_ring.02.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_pinky.02.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_index.03.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['thumb.03.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_middle.03.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_ring.03.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_pinky.03.L']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_index.03.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['thumb.03.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_middle.03.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_ring.03.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
        pbone = obj.pose.bones[bones['f_pinky.03.R']]
        pbone.rigify_type = ''
        pbone.lock_location = (False, False, False)
        pbone.lock_rotation = (False, False, False)
        pbone.lock_rotation_w = False
        pbone.lock_scale = (False, False, False)
        pbone.rotation_mode = 'QUATERNION'
        pbone.bone.layers = [False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]

        bpy.ops.object.mode_set(mode='EDIT')
        for bone in arm.edit_bones:
            bone.select = False
            bone.select_head = False
            bone.select_tail = False
        for b in bones:
            bone = arm.edit_bones[bones[b]]
            bone.select = True
            bone.select_head = True
            bone.select_tail = True
            bone.bbone_x = bone.bbone_z = bone.length * 0.05
            arm.edit_bones.active = bone

        arm.layers = [(x in [3, 5, 7, 10, 13, 16]) for x in range(32)]

         
         

        bpy.ops.object.mode_set(mode='OBJECT', toggle=False)
        bpy.ops.pose.rigify_generate()


        # Rename Existing Armature with name 'Rig'
        for arm in bpy.context.selected_objects:
            if arm.type == 'ARMATURE' and arm.name.startswith('rig'):
                arm.name = 'human_rig'



        # Rename Existing Rigify UI Script 'rig_ui.py'
        for t in bpy.data.texts:
            if t.name == 'rig_ui.py':
                t.name = 'rig_ui_human.py'
         
         
         
        for o in bpy.context.scene.objects:
            if o.type == 'MESH' and o.name.startswith('Human_GEO'):
                o.select_set(True)
            else:
                o.select_set(False)



         
        # Delete Metarig
        obj = bpy.data.objects['human_metarig']
        bpy.data.objects.remove(obj)



        # Go to Pose Mode
        bpy.ops.object.posemode_toggle()  



        # 1. Select rig_main_mesh / 2. Select human_rig and parent(auto)

        bpy.data.objects['Human_GEO'].select_set(True)
        bpy.data.objects['human_rig'].select_set(True)

        bpy.ops.object.parent_set(type='ARMATURE_AUTO')



        # View - Frame Selected
        pose_bones = bpy.context.object.pose.bones
        for pb in pose_bones:
            if pb.name.startswith('root'):
                pb.bone.select = 1
                bpy.ops.view3d.view_selected(use_all_regions=0)
                pb.bone.select = 0


        for o in bpy.context.scene.objects:
            if o.type == 'MESH' and o.name.startswith('Human_GEO'):

                o.select_set(False)

        bpy.context.scene.tool_settings.lock_object_mode = False


         



        return {'FINISHED'}










classes = [ OBJECT_OT_create_test_rig_ra,
          ]



def register():
    for cls in classes:
        bpy.utils.register_class(cls)



def unregister():
    for cls in classes:
        bpy.utils.unregister_class(cls)




if __name__ == "__main__":
    register()





